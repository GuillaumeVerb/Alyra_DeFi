{
  "contractName": "Market",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract D4Atoken",
          "name": "_rewardToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "RewardUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "TokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract D4Atoken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardPerHourFor1TKN",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_priceSymbol",
          "type": "string"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "priceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calculateTotalRewardEarned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getLastTransact",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getReserve",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "priceSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rewardPerHourFor1TKN",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isSupported",
              "type": "bool"
            }
          ],
          "internalType": "struct Market.Reserve",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getRewardBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract D4Atoken\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RewardUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerHourFor1TKN\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_priceSymbol\",\"type\":\"string\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateTotalRewardEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getLastTransact\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getReserve\",\"outputs\":[{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"priceSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerHourFor1TKN\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSupported\",\"type\":\"bool\"}],\"internalType\":\"struct Market.Reserve\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"priceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract D4Atoken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addToken(address,uint256,string)\":{\"details\":\"The owner associate the price of the token by using the corresponding map of ChainlinkKovanUSD.\",\"params\":{\"_asset\":\"The address of the token to be added.\",\"_priceSymbol\":\"The symbol of the token to be looked for in chainlink when we want the price of the asset. Can be different of the asset symbol. (ex: D4A => DAI, D4A will have the same price as DAI).\",\"_rewardPerHourFor1TKN\":\"The number of reward tokens in wei units to be minted for 1 ether units of the given asset during 1 hour.\"}},\"calculateTotalRewardEarned()\":{\"details\":\"This function allow to check the global rewards without modifying state variables. Developper can then call this function rapidely in the front-end.\"},\"claim()\":{\"details\":\"This function must be strongly secure as we mint the calculated amount at the end.\"},\"constructor\":{\"params\":{\"_rewardToken\":\"The reward token.\"}},\"deposit(uint256,address)\":{\"details\":\"We update all of our informations once the transaction has succeded.\",\"params\":{\"_amount\":\"The amount of asset in wei to be deposited.\",\"_asset\":\"The address of the token to be stack.\"}},\"getBalance(address)\":{\"details\":\"Public for unit tests.\",\"params\":{\"_asset\":\"The address of the token we want to calculate the amount stacked.\"}},\"getLastTransact(address)\":{\"details\":\"Public for unit tests.\",\"params\":{\"_asset\":\"The address of the token we want the last transaction time.\"}},\"getReserve(address)\":{\"details\":\"Made for unit tests.\",\"params\":{\"_asset\":\"The address of the token we want the reserve.\"}},\"getRewardBalance()\":{\"details\":\"Made for unit tests.\",\"returns\":{\"_0\":\"The amount of reward tokens earned.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"priceOf(address)\":{\"details\":\"Uses Chainlink datafeeds on kovan. The result must be divided by 8 to get the correct dollar decimal.\",\"params\":{\"_asset\":\"The address of the token for wich we want the price.\"},\"returns\":{\"_0\":\"The price in USD.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,address)\":{\"details\":\"We update all of our informations once the transaction has succeded.\",\"params\":{\"_amount\":\"The amount of asset in wei to be withdrawn.\",\"_asset\":\"The address of the token to be withdrawn.\"}}},\"title\":\"Stacking project\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToken(address,uint256,string)\":{\"notice\":\"Register a token to be supported by the market.\"},\"calculateTotalRewardEarned()\":{\"notice\":\"Calculate the global reward balance of a user with the rewards accumulated for ALL tokens.\"},\"claim()\":{\"notice\":\"Allows a user to retrieve his accumulated reward tokens\"},\"constructor\":{\"notice\":\"Set the reward token and chainlink to get prices.\"},\"deposit(uint256,address)\":{\"notice\":\"Allows a user to deposit Xwei tokens.\"},\"getBalance(address)\":{\"notice\":\"Retrieve the amount of token stacked.\"},\"getLastTransact(address)\":{\"notice\":\"Retrieve the time of the last traansaction.\"},\"getReserve(address)\":{\"notice\":\"Retrieve the reserve of a token.\"},\"getRewardBalance()\":{\"notice\":\"Retrieve the global reward balance.\"},\"priceOf(address)\":{\"notice\":\"Get the price of the asset in USD.\"},\"withdraw(uint256,address)\":{\"notice\":\"Allows a user to withdraw Xwei tokens.\"}},\"notice\":\"Staking with deposit, withdrawal and rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Market.sol\":\"Market\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"project:/contracts/ChainlinkKovanUSD.sol\":{\"keccak256\":\"0xd3a998047d1df1b0e6cc370408d451c7ef91b9037d1a13919de536366268eda7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2edfe7b9e4224cae54f68c7525aa686d58d67ec7d0308e6f05fa54eb80c5219\",\"dweb:/ipfs/QmXo4uRMsW2brrwtQ7f13gb2nDvabG9LEkrCc5etUcCehJ\"]},\"project:/contracts/D4Atoken.sol\":{\"keccak256\":\"0xc9e5a434d4ca10fd3a38b4e58d39a76243076d0777767b3e9e87617233c778c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebd441aebcc99f1fe5c9af00fa6f7d71774f64441258c624492fe5ace438f0d1\",\"dweb:/ipfs/QmUhciKVKQCGmPrdAAedYW2t2SwoHPhyhVFafypQBxaXLd\"]},\"project:/contracts/Market.sol\":{\"keccak256\":\"0x1d07ee6e183d321b7ea41ae40f73f8b777fd6c0cb9a4ffaf18f83f43cae53fdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f9cb439bb8335ef302fe5753606df4e2378d82a2d2562858b233c0f487e057b\",\"dweb:/ipfs/QmdgHx1NL54wshQpCBFzzZ7SPFQzh2nDVmgShyBHE7P5N3\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200494138038062004941833981810160405281019062000037919062000263565b620000576200004b6200010b60201b60201c565b6200011360201b60201c565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620000a690620001d7565b604051809103906000f080158015620000c3573d6000803e3d6000fd5b50600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000295565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611e658062002adc83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021782620001ea565b9050919050565b60006200022b826200020a565b9050919050565b6200023d816200021e565b81146200024957600080fd5b50565b6000815190506200025d8162000232565b92915050565b6000602082840312156200027c576200027b620001e5565b5b60006200028c848285016200024c565b91505092915050565b61283780620002a56000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80638da5cb5b11610097578063f2fde38b11610066578063f2fde38b1461025d578063f34f04a614610279578063f7c618c114610297578063f8b2cb4f146102b5576100f4565b80638da5cb5b146101af57806393e4f7b2146101cd578063b95ed06f146101fd578063c9a396e91461022d576100f4565b80634f64b2be116100d35780634f64b2be1461013b5780635e42b4551461016b5780636e553f6514610189578063715018a6146101a5576100f4565b8062f714ce146100f95780631d0b347a146101155780634e71d92d14610131575b600080fd5b610113600480360381019061010e9190611c26565b6102e5565b005b61012f600480360381019061012a9190611dac565b6106a0565b005b6101396108e7565b005b61015560048036038101906101509190611e1b565b610bc1565b6040516101629190611e57565b60405180910390f35b610173610c00565b6040516101809190611e81565b60405180910390f35b6101a3600480360381019061019e9190611c26565b610c47565b005b6101ad610f1d565b005b6101b7610f31565b6040516101c49190611e57565b60405180910390f35b6101e760048036038101906101e29190611e9c565b610f5a565b6040516101f49190611e81565b60405180910390f35b61021760048036038101906102129190611e9c565b611074565b6040516102249190611ee2565b60405180910390f35b61024760048036038101906102429190611e9c565b6111eb565b6040516102549190612071565b60405180910390f35b61027760048036038101906102729190611e9c565b6113e2565b005b610281611465565b60405161028e9190611e81565b60405180910390f35b61029f61153f565b6040516102ac91906120b4565b60405180910390f35b6102cf60048036038101906102ca9190611e9c565b611565565b6040516102dc9190611e81565b60405180910390f35b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c9061212c565b60405180910390fd5b8261037f83611565565b10156103c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b790612198565b60405180910390fd5b6103c98261167f565b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461045891906121e7565b92505081905550600061046a83611565565b11156104f95742600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061057f565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161061c92919061221b565b6020604051808303816000875af115801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190612270565b507fb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf8383336040516106939392919061229d565b60405180910390a1505050565b6106a86117e9565b60001515600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615151461073e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073590612320565b60405180910390fd5b60405180608001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200182815260200183815260200160011515815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061081a929190611a9b565b506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506004839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4836040516108da9190611e57565b60405180910390a1505050565b60008060005b6004805490508110156109eb576004818154811061090e5761090d612340565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600061094684610f5a565b11156109da576109558361167f565b42600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b806109e49061236f565b90506108ed565b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610a6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6590612403565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610b5292919061221b565b600060405180830381600087803b158015610b6c57600080fd5b505af1158015610b80573d6000803e3d6000fd5b505050507f6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a212128133604051610bb5929190612423565b60405180910390a15050565b60048181548110610bd157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce9061212c565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d769392919061244c565b6020604051808303816000875af1158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db99190612270565b5042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610e478261167f565b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610ed69190612483565b925050819055507f7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874838333604051610f109392919061229d565b60405180910390a1505050565b610f256117e9565b610f2f6000611867565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610fec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe39061212c565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915050919050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16611106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fd9061212c565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f66a1b71600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040518263ffffffff1660e01b81526004016111a291906125ce565b602060405180830381865afa1580156111bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e3919061261c565b915050919050565b6111f3611b21565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16611283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127a9061212c565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461133390612508565b80601f016020809104026020016040519081016040528092919081815260200182805461135f90612508565b80156113ac5780601f10611381576101008083540402835291602001916113ac565b820191906000526020600020905b81548152906001019060200180831161138f57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff161515151581525050915050919050565b6113ea6117e9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611459576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611450906126bb565b60405180910390fd5b61146281611867565b50565b6000806000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060005b60048054905081101561153657600481815481106114d0576114cf612340565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600061150884610f5a565b1115611525576115178361192b565b826115229190612483565b91505b8061152f9061236f565b90506114af565b50809250505090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166115f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ee9061212c565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154915050919050565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661170f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117069061212c565b60405180910390fd5b6117188261192b565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117669190612483565b925050819055507fa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054336040516117dd929190612423565b60405180910390a15050565b6117f1611a93565b73ffffffffffffffffffffffffffffffffffffffff1661180f610f31565b73ffffffffffffffffffffffffffffffffffffffff1614611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185c90612727565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166119bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b49061212c565b60405180910390fd5b60006119c884611565565b905060006119d585610f5a565b90506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050600082118015611a2e5750600083115b15611a85576000670de0b6b3a76400008285611a4a9190612747565b611a5491906127d0565b9050610e10818442611a6691906121e7565b611a709190612747565b611a7a91906127d0565b955050505050611a8d565b600094505050505b50919050565b600033905090565b828054611aa790612508565b90600052602060002090601f016020900481019282611ac95760008555611b10565b82601f10611ae257805160ff1916838001178555611b10565b82800160010185558215611b10579182015b82811115611b0f578251825591602001919060010190611af4565b5b509050611b1d9190611b61565b5090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000151581525090565b5b80821115611b7a576000816000905550600101611b62565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611ba581611b92565b8114611bb057600080fd5b50565b600081359050611bc281611b9c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bf382611bc8565b9050919050565b611c0381611be8565b8114611c0e57600080fd5b50565b600081359050611c2081611bfa565b92915050565b60008060408385031215611c3d57611c3c611b88565b5b6000611c4b85828601611bb3565b9250506020611c5c85828601611c11565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cb982611c70565b810181811067ffffffffffffffff82111715611cd857611cd7611c81565b5b80604052505050565b6000611ceb611b7e565b9050611cf78282611cb0565b919050565b600067ffffffffffffffff821115611d1757611d16611c81565b5b611d2082611c70565b9050602081019050919050565b82818337600083830152505050565b6000611d4f611d4a84611cfc565b611ce1565b905082815260208101848484011115611d6b57611d6a611c6b565b5b611d76848285611d2d565b509392505050565b600082601f830112611d9357611d92611c66565b5b8135611da3848260208601611d3c565b91505092915050565b600080600060608486031215611dc557611dc4611b88565b5b6000611dd386828701611c11565b9350506020611de486828701611bb3565b925050604084013567ffffffffffffffff811115611e0557611e04611b8d565b5b611e1186828701611d7e565b9150509250925092565b600060208284031215611e3157611e30611b88565b5b6000611e3f84828501611bb3565b91505092915050565b611e5181611be8565b82525050565b6000602082019050611e6c6000830184611e48565b92915050565b611e7b81611b92565b82525050565b6000602082019050611e966000830184611e72565b92915050565b600060208284031215611eb257611eb1611b88565b5b6000611ec084828501611c11565b91505092915050565b6000819050919050565b611edc81611ec9565b82525050565b6000602082019050611ef76000830184611ed3565b92915050565b6000819050919050565b6000611f22611f1d611f1884611bc8565b611efd565b611bc8565b9050919050565b6000611f3482611f07565b9050919050565b6000611f4682611f29565b9050919050565b611f5681611f3b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f96578082015181840152602081019050611f7b565b83811115611fa5576000848401525b50505050565b6000611fb682611f5c565b611fc08185611f67565b9350611fd0818560208601611f78565b611fd981611c70565b840191505092915050565b611fed81611b92565b82525050565b60008115159050919050565b61200881611ff3565b82525050565b60006080830160008301516120266000860182611f4d565b506020830151848203602086015261203e8282611fab565b91505060408301516120536040860182611fe4565b5060608301516120666060860182611fff565b508091505092915050565b6000602082019050818103600083015261208b818461200e565b905092915050565b600061209e82611f29565b9050919050565b6120ae81612093565b82525050565b60006020820190506120c960008301846120a5565b92915050565b600082825260208201905092915050565b7f546f6b656e206e6f7420737570706f7274656400000000000000000000000000600082015250565b60006121166013836120cf565b9150612121826120e0565b602082019050919050565b6000602082019050818103600083015261214581612109565b9050919050565b7f5769746864726177696e6720746f6f206d756368000000000000000000000000600082015250565b60006121826014836120cf565b915061218d8261214c565b602082019050919050565b600060208201905081810360008301526121b181612175565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121f282611b92565b91506121fd83611b92565b9250828210156122105761220f6121b8565b5b828203905092915050565b60006040820190506122306000830185611e48565b61223d6020830184611e72565b9392505050565b61224d81611ff3565b811461225857600080fd5b50565b60008151905061226a81612244565b92915050565b60006020828403121561228657612285611b88565b5b60006122948482850161225b565b91505092915050565b60006060820190506122b26000830186611e72565b6122bf6020830185611e48565b6122cc6040830184611e48565b949350505050565b7f546f6b656e20616c726561647920737570706f72746564000000000000000000600082015250565b600061230a6017836120cf565b9150612315826122d4565b602082019050919050565b60006020820190508181036000830152612339816122fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061237a82611b92565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123ac576123ab6121b8565b5b600182019050919050565b7f4e6f207265776172647320746f206265206d696e746564000000000000000000600082015250565b60006123ed6017836120cf565b91506123f8826123b7565b602082019050919050565b6000602082019050818103600083015261241c816123e0565b9050919050565b60006040820190506124386000830185611e72565b6124456020830184611e48565b9392505050565b60006060820190506124616000830186611e48565b61246e6020830185611e48565b61247b6040830184611e72565b949350505050565b600061248e82611b92565b915061249983611b92565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124ce576124cd6121b8565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061252057607f821691505b602082108103612533576125326124d9565b5b50919050565b60008190508160005260206000209050919050565b6000815461255b81612508565b61256581866120cf565b945060018216600081146125805760018114612592576125c5565b60ff19831686526020860193506125c5565b61259b85612539565b60005b838110156125bd5781548189015260018201915060208101905061259e565b808801955050505b50505092915050565b600060208201905081810360008301526125e8818461254e565b905092915050565b6125f981611ec9565b811461260457600080fd5b50565b600081519050612616816125f0565b92915050565b60006020828403121561263257612631611b88565b5b600061264084828501612607565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006126a56026836120cf565b91506126b082612649565b604082019050919050565b600060208201905081810360008301526126d481612698565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006127116020836120cf565b915061271c826126db565b602082019050919050565b6000602082019050818103600083015261274081612704565b9050919050565b600061275282611b92565b915061275d83611b92565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612796576127956121b8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006127db82611b92565b91506127e683611b92565b9250826127f6576127f56127a1565b5b82820490509291505056fea2646970667358221220e46d23095c3be796112efa763d9449606174f881f5c0fe60a9dddbe96c30269864736f6c634300080e003360806040523480156200001157600080fd5b50738e67a0cffbbf6a346ce87dfe06dae2dc782b32196000604051620000379062000db1565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738993ed705cdf5e84d0a3b754b5ee0e1783fcdf166000604051620000a89062000e18565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550736135b13325bfc4b00278b4abc5e20bbce2d6580e6000604051620001199062000e7f565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ed0616bef04d374969f302a34ae4a63882490a8c60006040516200018a9062000ee6565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ecf93d14d25e02ba2c13698eedca9aa98348efb66000604051620001fb9062000f4d565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735813a90f826e16db392abd2af7966313fc1fd5b860006040516200026c9062000fb4565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073777a68032a88e5a84678a77af2cd65a7b3c0775a6000604051620002dd906200101b565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739326bfa02add2366b30bacb125260af64103133160006040516200034e9062001082565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730c15ab9a0db086e062194c273cc79f41597bbf136000604051620003bf90620010e9565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073c9129fac7ce4d3dc72714fd9d5285fb2fdb525926000604051620004309062001150565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507328b0061f44e6a9780224aa61bec8c3fcb0d37de96000604051620004a190620011b7565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d627b1ef3ac23f1d3e576fa6206126f3c1bd0942600060405162000512906200121e565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739e465c5499023675051517e9ee5f4c334d91e3696000604051620005839062001285565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073396c5e36dd0a0f5a5d33dae44368d4193f69a1f06000604051620005f490620012ec565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073cee03cf92c7ffc1bad8eaa572d69a4b61b6d46406000604051620006659062001353565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507348c9ff5bfd7d12e3c511022a6e54fb1c5b8dc3ea6000604051620006d690620013ba565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507384fdc8dd500f29902c99c928af2a91970e7432b66000604051620007479062001421565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738f4e77806efec092a279ac6a49e129e560b4210e6000604051620007b89062001488565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507331f93da9823d737b7e44bdee0df389fe62fd1acd60006040516200082990620014ef565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739477f0e5bfabaf253eacee3bee3ccf08b46cc79c60006040516200089a9062001556565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073b31357d152638fd1ae0853d24b9ea81df29e3ef260006040516200090b90620015bd565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073da5904bdbfb4ef12a3955aeca103f51dc87c7c3960006040516200097c9062001624565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739211c6b3bf41a10f78539810cf5c64e1bb78ec606000604051620009ed906200168b565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550736d393f929e213d2ca67a7fa73108a42b884f5f74600060405162000a5e90620016f2565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734594051c018ac096222b5077c3351d523f93a963600060405162000acf9062001759565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073c8fb5684f2707c82f28595deac017bfdf44ee9c5600060405162000b4090620017c0565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733ea2b7e3ed9ea9120c3d6699240d1ff2184ac8b3600060405162000bb19062001827565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073c6f39246494f25bbcb0a8018796890037cb5980c600060405162000c22906200188e565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507324d6b177cf20166cd8f55caafe1c745b44f6c203600060405162000c9390620018f5565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073a85646318d20c684f6251097d24a6e74fe1ed5eb600060405162000d04906200195c565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062001973565b600081905092915050565b7f4241540000000000000000000000000000000000000000000000000000000000600082015250565b600062000d9960038362000d56565b915062000da68262000d61565b600382019050919050565b600062000dbe8262000d8a565b9150819050919050565b7f424e420000000000000000000000000000000000000000000000000000000000600082015250565b600062000e0060038362000d56565b915062000e0d8262000dc8565b600382019050919050565b600062000e258262000df1565b9150819050919050565b7f4254430000000000000000000000000000000000000000000000000000000000600082015250565b600062000e6760038362000d56565b915062000e748262000e2f565b600382019050919050565b600062000e8c8262000e58565b9150819050919050565b7f4348460000000000000000000000000000000000000000000000000000000000600082015250565b600062000ece60038362000d56565b915062000edb8262000e96565b600382019050919050565b600062000ef38262000ebf565b9150819050919050565b7f434f4d5000000000000000000000000000000000000000000000000000000000600082015250565b600062000f3560048362000d56565b915062000f428262000efd565b600482019050919050565b600062000f5a8262000f26565b9150819050919050565b7f4155440000000000000000000000000000000000000000000000000000000000600082015250565b600062000f9c60038362000d56565b915062000fa98262000f64565b600382019050919050565b600062000fc18262000f8d565b9150819050919050565b7f4441490000000000000000000000000000000000000000000000000000000000600082015250565b60006200100360038362000d56565b9150620010108262000fcb565b600382019050919050565b6000620010288262000ff4565b9150819050919050565b7f4554480000000000000000000000000000000000000000000000000000000000600082015250565b60006200106a60038362000d56565b9150620010778262001032565b600382019050919050565b60006200108f826200105b565b9150819050919050565b7f4555520000000000000000000000000000000000000000000000000000000000600082015250565b6000620010d160038362000d56565b9150620010de8262001099565b600382019050919050565b6000620010f682620010c2565b9150819050919050565b7f464f525448000000000000000000000000000000000000000000000000000000600082015250565b60006200113860058362000d56565b9150620011458262001100565b600582019050919050565b60006200115d8262001129565b9150819050919050565b7f4742500000000000000000000000000000000000000000000000000000000000600082015250565b60006200119f60038362000d56565b9150620011ac8262001167565b600382019050919050565b6000620011c48262001190565b9150819050919050565b7f4a50590000000000000000000000000000000000000000000000000000000000600082015250565b60006200120660038362000d56565b91506200121382620011ce565b600382019050919050565b60006200122b82620011f7565b9150819050919050565b7f4b52570000000000000000000000000000000000000000000000000000000000600082015250565b60006200126d60038362000d56565b91506200127a8262001235565b600382019050919050565b600062001292826200125e565b9150819050919050565b7f4c494e4b00000000000000000000000000000000000000000000000000000000600082015250565b6000620012d460048362000d56565b9150620012e1826200129c565b600482019050919050565b6000620012f982620012c5565b9150819050919050565b7f4c54430000000000000000000000000000000000000000000000000000000000600082015250565b60006200133b60038362000d56565b9150620013488262001303565b600382019050919050565b600062001360826200132c565b9150819050919050565b7f4f696c0000000000000000000000000000000000000000000000000000000000600082015250565b6000620013a260038362000d56565b9150620013af826200136a565b600382019050919050565b6000620013c78262001393565b9150819050919050565b7f5048500000000000000000000000000000000000000000000000000000000000600082015250565b60006200140960038362000d56565b91506200141682620013d1565b600382019050919050565b60006200142e82620013fa565b9150819050919050565b7f5245500000000000000000000000000000000000000000000000000000000000600082015250565b60006200147060038362000d56565b91506200147d8262001438565b600382019050919050565b6000620014958262001461565b9150819050919050565b7f534e580000000000000000000000000000000000000000000000000000000000600082015250565b6000620014d760038362000d56565b9150620014e4826200149f565b600382019050919050565b6000620014fc82620014c8565b9150819050919050565b7f5452580000000000000000000000000000000000000000000000000000000000600082015250565b60006200153e60038362000d56565b91506200154b8262001506565b600382019050919050565b600062001563826200152f565b9150819050919050565b7f54534c4100000000000000000000000000000000000000000000000000000000600082015250565b6000620015a560048362000d56565b9150620015b2826200156d565b600482019050919050565b6000620015ca8262001596565b9150819050919050565b7f554e492000000000000000000000000000000000000000000000000000000000600082015250565b60006200160c60048362000d56565b91506200161982620015d4565b600482019050919050565b60006200163182620015fd565b9150819050919050565b7f5553444320000000000000000000000000000000000000000000000000000000600082015250565b60006200167360058362000d56565b915062001680826200163b565b600582019050919050565b6000620016988262001664565b9150819050919050565b7f56454c4f00000000000000000000000000000000000000000000000000000000600082015250565b6000620016da60048362000d56565b9150620016e782620016a2565b600482019050919050565b6000620016ff82620016cb565b9150819050919050565b7f5841470000000000000000000000000000000000000000000000000000000000600082015250565b60006200174160038362000d56565b91506200174e8262001709565b600382019050919050565b6000620017668262001732565b9150819050919050565b7f5841550000000000000000000000000000000000000000000000000000000000600082015250565b6000620017a860038362000d56565b9150620017b58262001770565b600382019050919050565b6000620017cd8262001799565b9150819050919050565b7f5852500000000000000000000000000000000000000000000000000000000000600082015250565b60006200180f60038362000d56565b91506200181c82620017d7565b600382019050919050565b6000620018348262001800565b9150819050919050565b7f58545a0000000000000000000000000000000000000000000000000000000000600082015250565b60006200187660038362000d56565b915062001883826200183e565b600382019050919050565b60006200189b8262001867565b9150819050919050565b7f5a52580000000000000000000000000000000000000000000000000000000000600082015250565b6000620018dd60038362000d56565b9150620018ea82620018a5565b600382019050919050565b60006200190282620018ce565b9150819050919050565b7f7343455800000000000000000000000000000000000000000000000000000000600082015250565b60006200194460048362000d56565b915062001951826200190c565b600482019050919050565b6000620019698262001935565b9150819050919050565b6104e280620019836000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f66a1b7114610030575b600080fd5b61004a6004803603810190610045919061027f565b610060565b60405161005791906102e1565b60405180910390f35b6000806000836040516100739190610376565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101159190610431565b5050509150508092505050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61018c82610143565b810181811067ffffffffffffffff821117156101ab576101aa610154565b5b80604052505050565b60006101be610125565b90506101ca8282610183565b919050565b600067ffffffffffffffff8211156101ea576101e9610154565b5b6101f382610143565b9050602081019050919050565b82818337600083830152505050565b600061022261021d846101cf565b6101b4565b90508281526020810184848401111561023e5761023d61013e565b5b610249848285610200565b509392505050565b600082601f83011261026657610265610139565b5b813561027684826020860161020f565b91505092915050565b6000602082840312156102955761029461012f565b5b600082013567ffffffffffffffff8111156102b3576102b2610134565b5b6102bf84828501610251565b91505092915050565b6000819050919050565b6102db816102c8565b82525050565b60006020820190506102f660008301846102d2565b92915050565b600081519050919050565b600081905092915050565b60005b83811015610330578082015181840152602081019050610315565b8381111561033f576000848401525b50505050565b6000610350826102fc565b61035a8185610307565b935061036a818560208601610312565b80840191505092915050565b60006103828284610345565b915081905092915050565b600069ffffffffffffffffffff82169050919050565b6103ac8161038d565b81146103b757600080fd5b50565b6000815190506103c9816103a3565b92915050565b6103d8816102c8565b81146103e357600080fd5b50565b6000815190506103f5816103cf565b92915050565b6000819050919050565b61040e816103fb565b811461041957600080fd5b50565b60008151905061042b81610405565b92915050565b600080600080600060a0868803121561044d5761044c61012f565b5b600061045b888289016103ba565b955050602061046c888289016103e6565b945050604061047d8882890161041c565b935050606061048e8882890161041c565b925050608061049f888289016103ba565b915050929550929590935056fea2646970667358221220e5d373a2a76e33634bba112a9c8c643e7b162da0d383a157bd269ba9971af42464736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f45760003560e01c80638da5cb5b11610097578063f2fde38b11610066578063f2fde38b1461025d578063f34f04a614610279578063f7c618c114610297578063f8b2cb4f146102b5576100f4565b80638da5cb5b146101af57806393e4f7b2146101cd578063b95ed06f146101fd578063c9a396e91461022d576100f4565b80634f64b2be116100d35780634f64b2be1461013b5780635e42b4551461016b5780636e553f6514610189578063715018a6146101a5576100f4565b8062f714ce146100f95780631d0b347a146101155780634e71d92d14610131575b600080fd5b610113600480360381019061010e9190611c26565b6102e5565b005b61012f600480360381019061012a9190611dac565b6106a0565b005b6101396108e7565b005b61015560048036038101906101509190611e1b565b610bc1565b6040516101629190611e57565b60405180910390f35b610173610c00565b6040516101809190611e81565b60405180910390f35b6101a3600480360381019061019e9190611c26565b610c47565b005b6101ad610f1d565b005b6101b7610f31565b6040516101c49190611e57565b60405180910390f35b6101e760048036038101906101e29190611e9c565b610f5a565b6040516101f49190611e81565b60405180910390f35b61021760048036038101906102129190611e9c565b611074565b6040516102249190611ee2565b60405180910390f35b61024760048036038101906102429190611e9c565b6111eb565b6040516102549190612071565b60405180910390f35b61027760048036038101906102729190611e9c565b6113e2565b005b610281611465565b60405161028e9190611e81565b60405180910390f35b61029f61153f565b6040516102ac91906120b4565b60405180910390f35b6102cf60048036038101906102ca9190611e9c565b611565565b6040516102dc9190611e81565b60405180910390f35b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c9061212c565b60405180910390fd5b8261037f83611565565b10156103c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b790612198565b60405180910390fd5b6103c98261167f565b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461045891906121e7565b92505081905550600061046a83611565565b11156104f95742600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061057f565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161061c92919061221b565b6020604051808303816000875af115801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190612270565b507fb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf8383336040516106939392919061229d565b60405180910390a1505050565b6106a86117e9565b60001515600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615151461073e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073590612320565b60405180910390fd5b60405180608001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200182815260200183815260200160011515815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061081a929190611a9b565b506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506004839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4836040516108da9190611e57565b60405180910390a1505050565b60008060005b6004805490508110156109eb576004818154811061090e5761090d612340565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600061094684610f5a565b11156109da576109558361167f565b42600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b806109e49061236f565b90506108ed565b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610a6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6590612403565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610b5292919061221b565b600060405180830381600087803b158015610b6c57600080fd5b505af1158015610b80573d6000803e3d6000fd5b505050507f6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a212128133604051610bb5929190612423565b60405180910390a15050565b60048181548110610bd157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce9061212c565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d769392919061244c565b6020604051808303816000875af1158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db99190612270565b5042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610e478261167f565b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610ed69190612483565b925050819055507f7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874838333604051610f109392919061229d565b60405180910390a1505050565b610f256117e9565b610f2f6000611867565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610fec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe39061212c565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915050919050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16611106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fd9061212c565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f66a1b71600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040518263ffffffff1660e01b81526004016111a291906125ce565b602060405180830381865afa1580156111bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e3919061261c565b915050919050565b6111f3611b21565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16611283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127a9061212c565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461133390612508565b80601f016020809104026020016040519081016040528092919081815260200182805461135f90612508565b80156113ac5780601f10611381576101008083540402835291602001916113ac565b820191906000526020600020905b81548152906001019060200180831161138f57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff161515151581525050915050919050565b6113ea6117e9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611459576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611450906126bb565b60405180910390fd5b61146281611867565b50565b6000806000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060005b60048054905081101561153657600481815481106114d0576114cf612340565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600061150884610f5a565b1115611525576115178361192b565b826115229190612483565b91505b8061152f9061236f565b90506114af565b50809250505090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166115f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ee9061212c565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154915050919050565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661170f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117069061212c565b60405180910390fd5b6117188261192b565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117669190612483565b925050819055507fa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054336040516117dd929190612423565b60405180910390a15050565b6117f1611a93565b73ffffffffffffffffffffffffffffffffffffffff1661180f610f31565b73ffffffffffffffffffffffffffffffffffffffff1614611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185c90612727565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166119bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b49061212c565b60405180910390fd5b60006119c884611565565b905060006119d585610f5a565b90506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050600082118015611a2e5750600083115b15611a85576000670de0b6b3a76400008285611a4a9190612747565b611a5491906127d0565b9050610e10818442611a6691906121e7565b611a709190612747565b611a7a91906127d0565b955050505050611a8d565b600094505050505b50919050565b600033905090565b828054611aa790612508565b90600052602060002090601f016020900481019282611ac95760008555611b10565b82601f10611ae257805160ff1916838001178555611b10565b82800160010185558215611b10579182015b82811115611b0f578251825591602001919060010190611af4565b5b509050611b1d9190611b61565b5090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000151581525090565b5b80821115611b7a576000816000905550600101611b62565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611ba581611b92565b8114611bb057600080fd5b50565b600081359050611bc281611b9c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bf382611bc8565b9050919050565b611c0381611be8565b8114611c0e57600080fd5b50565b600081359050611c2081611bfa565b92915050565b60008060408385031215611c3d57611c3c611b88565b5b6000611c4b85828601611bb3565b9250506020611c5c85828601611c11565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cb982611c70565b810181811067ffffffffffffffff82111715611cd857611cd7611c81565b5b80604052505050565b6000611ceb611b7e565b9050611cf78282611cb0565b919050565b600067ffffffffffffffff821115611d1757611d16611c81565b5b611d2082611c70565b9050602081019050919050565b82818337600083830152505050565b6000611d4f611d4a84611cfc565b611ce1565b905082815260208101848484011115611d6b57611d6a611c6b565b5b611d76848285611d2d565b509392505050565b600082601f830112611d9357611d92611c66565b5b8135611da3848260208601611d3c565b91505092915050565b600080600060608486031215611dc557611dc4611b88565b5b6000611dd386828701611c11565b9350506020611de486828701611bb3565b925050604084013567ffffffffffffffff811115611e0557611e04611b8d565b5b611e1186828701611d7e565b9150509250925092565b600060208284031215611e3157611e30611b88565b5b6000611e3f84828501611bb3565b91505092915050565b611e5181611be8565b82525050565b6000602082019050611e6c6000830184611e48565b92915050565b611e7b81611b92565b82525050565b6000602082019050611e966000830184611e72565b92915050565b600060208284031215611eb257611eb1611b88565b5b6000611ec084828501611c11565b91505092915050565b6000819050919050565b611edc81611ec9565b82525050565b6000602082019050611ef76000830184611ed3565b92915050565b6000819050919050565b6000611f22611f1d611f1884611bc8565b611efd565b611bc8565b9050919050565b6000611f3482611f07565b9050919050565b6000611f4682611f29565b9050919050565b611f5681611f3b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f96578082015181840152602081019050611f7b565b83811115611fa5576000848401525b50505050565b6000611fb682611f5c565b611fc08185611f67565b9350611fd0818560208601611f78565b611fd981611c70565b840191505092915050565b611fed81611b92565b82525050565b60008115159050919050565b61200881611ff3565b82525050565b60006080830160008301516120266000860182611f4d565b506020830151848203602086015261203e8282611fab565b91505060408301516120536040860182611fe4565b5060608301516120666060860182611fff565b508091505092915050565b6000602082019050818103600083015261208b818461200e565b905092915050565b600061209e82611f29565b9050919050565b6120ae81612093565b82525050565b60006020820190506120c960008301846120a5565b92915050565b600082825260208201905092915050565b7f546f6b656e206e6f7420737570706f7274656400000000000000000000000000600082015250565b60006121166013836120cf565b9150612121826120e0565b602082019050919050565b6000602082019050818103600083015261214581612109565b9050919050565b7f5769746864726177696e6720746f6f206d756368000000000000000000000000600082015250565b60006121826014836120cf565b915061218d8261214c565b602082019050919050565b600060208201905081810360008301526121b181612175565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121f282611b92565b91506121fd83611b92565b9250828210156122105761220f6121b8565b5b828203905092915050565b60006040820190506122306000830185611e48565b61223d6020830184611e72565b9392505050565b61224d81611ff3565b811461225857600080fd5b50565b60008151905061226a81612244565b92915050565b60006020828403121561228657612285611b88565b5b60006122948482850161225b565b91505092915050565b60006060820190506122b26000830186611e72565b6122bf6020830185611e48565b6122cc6040830184611e48565b949350505050565b7f546f6b656e20616c726561647920737570706f72746564000000000000000000600082015250565b600061230a6017836120cf565b9150612315826122d4565b602082019050919050565b60006020820190508181036000830152612339816122fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061237a82611b92565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123ac576123ab6121b8565b5b600182019050919050565b7f4e6f207265776172647320746f206265206d696e746564000000000000000000600082015250565b60006123ed6017836120cf565b91506123f8826123b7565b602082019050919050565b6000602082019050818103600083015261241c816123e0565b9050919050565b60006040820190506124386000830185611e72565b6124456020830184611e48565b9392505050565b60006060820190506124616000830186611e48565b61246e6020830185611e48565b61247b6040830184611e72565b949350505050565b600061248e82611b92565b915061249983611b92565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124ce576124cd6121b8565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061252057607f821691505b602082108103612533576125326124d9565b5b50919050565b60008190508160005260206000209050919050565b6000815461255b81612508565b61256581866120cf565b945060018216600081146125805760018114612592576125c5565b60ff19831686526020860193506125c5565b61259b85612539565b60005b838110156125bd5781548189015260018201915060208101905061259e565b808801955050505b50505092915050565b600060208201905081810360008301526125e8818461254e565b905092915050565b6125f981611ec9565b811461260457600080fd5b50565b600081519050612616816125f0565b92915050565b60006020828403121561263257612631611b88565b5b600061264084828501612607565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006126a56026836120cf565b91506126b082612649565b604082019050919050565b600060208201905081810360008301526126d481612698565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006127116020836120cf565b915061271c826126db565b602082019050919050565b6000602082019050818103600083015261274081612704565b9050919050565b600061275282611b92565b915061275d83611b92565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612796576127956121b8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006127db82611b92565b91506127e683611b92565b9250826127f6576127f56127a1565b5b82820490509291505056fea2646970667358221220e46d23095c3be796112efa763d9449606174f881f5c0fe60a9dddbe96c30269864736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1413:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:9",
                "type": ""
              }
            ],
            "src": "7:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:9",
                "type": ""
              }
            ],
            "src": "334:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:9",
                "type": ""
              }
            ],
            "src": "466:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "629:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "639:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "668:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "650:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "650:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "639:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_D4Atoken_$352",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "611:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "621:7:9",
                "type": ""
              }
            ],
            "src": "568:112:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "745:95:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "830:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "768:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "809:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_D4Atoken_$352",
                              "nodeType": "YulIdentifier",
                              "src": "775:33:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "775:40:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "765:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "765:51:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "758:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "758:59:9"
                  },
                  "nodeType": "YulIf",
                  "src": "755:79:9"
                }
              ]
            },
            "name": "validator_revert_t_contract$_D4Atoken_$352",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "738:5:9",
                "type": ""
              }
            ],
            "src": "686:154:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "925:96:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "935:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "950:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "944:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "944:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "935:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1009:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_D4Atoken_$352",
                      "nodeType": "YulIdentifier",
                      "src": "966:42:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "966:49:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "966:49:9"
                }
              ]
            },
            "name": "abi_decode_t_contract$_D4Atoken_$352_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "903:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "911:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "919:5:9",
                "type": ""
              }
            ],
            "src": "846:175:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1120:290:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1166:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1168:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1168:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1168:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1141:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1150:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1137:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1162:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1133:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1133:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1130:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1259:144:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1274:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1288:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1278:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1303:90:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1365:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1376:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1361:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1361:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1385:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_D4Atoken_$352_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1313:47:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1313:80:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1303:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_D4Atoken_$352_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1090:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1101:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1113:6:9",
                "type": ""
              }
            ],
            "src": "1027:383:9"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_D4Atoken_$352(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_D4Atoken_$352(value) {\n        if iszero(eq(value, cleanup_t_contract$_D4Atoken_$352(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_D4Atoken_$352_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_D4Atoken_$352(value)\n    }\n\n    function abi_decode_tuple_t_contract$_D4Atoken_$352_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_D4Atoken_$352_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22947:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:9",
                "type": ""
              }
            ],
            "src": "7:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:9",
                "type": ""
              }
            ],
            "src": "334:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:9",
                "type": ""
              }
            ],
            "src": "417:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:9",
                "type": ""
              }
            ],
            "src": "545:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "745:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "760:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "767:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "756:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "745:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "717:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "727:7:9",
                "type": ""
              }
            ],
            "src": "690:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "867:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "877:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "906:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "888:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "888:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "877:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "849:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "859:7:9",
                "type": ""
              }
            ],
            "src": "822:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:9",
                "type": ""
              }
            ],
            "src": "924:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:9",
                "type": ""
              }
            ],
            "src": "1052:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1280:391:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1326:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1328:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1328:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1328:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1301:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1310:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1297:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1322:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1293:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1290:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1463:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1498:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1509:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1518:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1473:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1463:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1546:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1561:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1565:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1591:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1626:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1637:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1622:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1622:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1646:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1601:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1601:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1591:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1242:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1253:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1265:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1273:6:9",
                "type": ""
              }
            ],
            "src": "1197:474:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1766:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1783:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1786:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1776:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1776:12:9"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "1677:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1889:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1906:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1909:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1899:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1899:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1899:12:9"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "1800:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1971:54:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1981:38:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1999:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2006:2:9",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1995:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1995:14:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2015:2:9",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2011:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2011:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1991:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1991:28:9"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1981:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1954:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1964:6:9",
                "type": ""
              }
            ],
            "src": "1923:102:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2059:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2076:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2079:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2069:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2069:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2069:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2173:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2176:4:9",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2166:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2166:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2166:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2197:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2200:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2190:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2190:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2190:15:9"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2031:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2260:238:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2270:58:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2292:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "2322:4:9"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2300:21:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2300:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2288:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2288:40:9"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2274:10:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2439:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2441:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2441:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2441:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2382:10:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2394:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2379:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2379:34:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2418:10:9"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2430:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2415:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2415:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2376:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2376:62:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2373:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2477:2:9",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2481:10:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2470:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2470:22:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2470:22:9"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2246:6:9",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2254:4:9",
                "type": ""
              }
            ],
            "src": "2217:281:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2545:88:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2555:30:9",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "2565:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2565:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2555:6:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2614:6:9"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2622:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "2594:19:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2594:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2594:33:9"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2529:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2538:6:9",
                "type": ""
              }
            ],
            "src": "2504:129:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2706:241:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2811:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2813:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2813:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2813:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2783:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2791:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2780:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2780:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2777:56:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2843:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2873:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "2851:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2851:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2843:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2917:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2929:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2935:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2925:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2925:15:9"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2917:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2690:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2701:4:9",
                "type": ""
              }
            ],
            "src": "2639:308:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3004:103:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "3027:3:9"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3032:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3037:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3014:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3014:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3014:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3085:3:9"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3090:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3081:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3081:16:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3099:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3074:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3074:27:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3074:27:9"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2986:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2991:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2996:6:9",
                "type": ""
              }
            ],
            "src": "2953:154:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3197:328:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3207:75:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3274:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3232:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3232:49:9"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3216:15:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3216:66:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3207:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "3298:5:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3305:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3291:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3291:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3291:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3321:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "3336:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3343:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3332:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3332:16:9"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "3325:3:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3386:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "3388:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3388:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3388:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "3367:3:9"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3372:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3363:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3363:16:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3381:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3360:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3360:25:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3357:112:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3502:3:9"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "3507:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3512:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3478:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3478:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3478:41:9"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3170:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3175:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3183:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "3191:5:9",
                "type": ""
              }
            ],
            "src": "3113:412:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3607:278:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3656:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "3658:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3658:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3658:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3635:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3643:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3631:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3631:17:9"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3650:3:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3627:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3627:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3620:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3620:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3617:122:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3748:34:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3775:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3762:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3762:20:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3752:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3791:88:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3852:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3860:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3848:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3848:17:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3867:6:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3875:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3800:47:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3800:79:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3791:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3585:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3593:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "3601:5:9",
                "type": ""
              }
            ],
            "src": "3545:340:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4001:689:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4047:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4049:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4049:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4049:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4022:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4031:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4018:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4018:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4043:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4014:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4014:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4011:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4140:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4155:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4169:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4159:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4184:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4219:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4230:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4215:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4215:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4239:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4194:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4194:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4184:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4267:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4282:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4296:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4286:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4312:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4347:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4358:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4343:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4343:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4367:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4322:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4322:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4312:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4395:288:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4410:46:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4441:9:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4452:2:9",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4437:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4437:18:9"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4424:12:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4424:32:9"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4414:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4503:83:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "4505:77:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4505:79:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4505:79:9"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4475:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4483:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4472:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4472:30:9"
                      },
                      "nodeType": "YulIf",
                      "src": "4469:117:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4600:73:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4645:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4656:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4641:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4641:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4665:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "4610:30:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4610:63:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4600:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3955:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3966:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3978:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3986:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3994:6:9",
                "type": ""
              }
            ],
            "src": "3891:799:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4762:263:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4808:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4810:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4810:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4810:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4783:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4792:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4779:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4779:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4804:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4775:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4775:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4772:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4901:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4916:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4930:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4920:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4945:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4980:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4991:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4976:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4976:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5000:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4955:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4955:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4945:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4732:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4743:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4755:6:9",
                "type": ""
              }
            ],
            "src": "4696:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5096:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5113:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5136:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5118:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5118:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5106:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5106:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5106:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5084:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5091:3:9",
                "type": ""
              }
            ],
            "src": "5031:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5253:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5263:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5275:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5286:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5271:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5271:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5263:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5343:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5356:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5367:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5352:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5352:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5299:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5299:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5299:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5225:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5237:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5248:4:9",
                "type": ""
              }
            ],
            "src": "5155:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5448:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5465:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5488:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5470:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5470:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5458:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5458:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5458:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5436:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5443:3:9",
                "type": ""
              }
            ],
            "src": "5383:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5605:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5615:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5627:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5638:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5623:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5623:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5615:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5695:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5708:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5719:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5704:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5704:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5651:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5651:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5651:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5577:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5589:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5600:4:9",
                "type": ""
              }
            ],
            "src": "5507:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5801:263:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5847:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5849:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5849:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5849:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5822:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5831:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5818:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5818:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5843:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5814:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5811:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5940:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5955:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5969:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5959:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5984:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6019:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6030:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6015:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6015:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6039:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5994:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5994:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5984:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5771:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5782:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5794:6:9",
                "type": ""
              }
            ],
            "src": "5735:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6114:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6124:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6135:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6124:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6096:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6106:7:9",
                "type": ""
              }
            ],
            "src": "6070:76:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6215:52:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6232:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6254:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "6237:16:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6237:23:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6225:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6225:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6225:36:9"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6203:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6210:3:9",
                "type": ""
              }
            ],
            "src": "6152:115:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6369:122:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6379:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6391:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6402:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6387:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6387:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6379:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6457:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6470:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6481:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6466:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6466:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6415:41:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6415:69:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6415:69:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6341:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6353:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6364:4:9",
                "type": ""
              }
            ],
            "src": "6273:218:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6529:28:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6539:12:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6546:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6539:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6515:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6525:3:9",
                "type": ""
              }
            ],
            "src": "6497:60:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6623:82:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6633:66:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6691:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "6673:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6673:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "6664:8:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6664:34:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6646:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6646:53:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6633:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6603:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6613:9:9",
                "type": ""
              }
            ],
            "src": "6563:142:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6771:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6781:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6825:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6794:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6794:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6781:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6751:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6761:9:9",
                "type": ""
              }
            ],
            "src": "6711:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6917:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6927:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6971:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "6940:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6940:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6927:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$1674_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6897:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6907:9:9",
                "type": ""
              }
            ],
            "src": "6843:140:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7058:80:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7075:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7125:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$1674_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7080:44:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7080:51:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7068:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7068:64:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7068:64:9"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$1674_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7046:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7053:3:9",
                "type": ""
              }
            ],
            "src": "6989:149:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7203:40:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7214:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7230:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7224:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7224:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7214:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7186:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7196:6:9",
                "type": ""
              }
            ],
            "src": "7144:99:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7335:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7352:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7357:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7345:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7345:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7345:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7373:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7392:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7397:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7388:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7388:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7373:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7307:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7312:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7323:11:9",
                "type": ""
              }
            ],
            "src": "7249:159:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7463:258:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7473:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7482:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7477:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7542:63:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7567:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7572:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7563:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7563:11:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7586:3:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7591:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7582:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7582:11:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7576:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7576:18:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7556:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7556:39:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7556:39:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7503:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7506:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7500:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7500:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7514:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7516:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7525:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7528:2:9",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7521:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7521:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7516:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7496:3:9",
                    "statements": []
                  },
                  "src": "7492:113:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7639:76:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7689:3:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7694:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7685:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7685:16:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7703:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7678:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7678:27:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7678:27:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7620:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7623:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7617:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7617:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7614:101:9"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7445:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7450:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7455:6:9",
                "type": ""
              }
            ],
            "src": "7414:307:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7809:262:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7819:53:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7866:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "7833:32:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7833:39:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7823:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7881:68:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7937:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7942:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "7888:48:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7888:61:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7881:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7984:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7991:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7980:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7980:16:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7998:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8003:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7958:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7958:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7958:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8019:46:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8030:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8057:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "8035:21:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8035:29:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8026:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8026:39:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8019:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7790:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7797:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7805:3:9",
                "type": ""
              }
            ],
            "src": "7727:344:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8132:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8149:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8172:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8154:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8154:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8142:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8142:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8142:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8120:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8127:3:9",
                "type": ""
              }
            ],
            "src": "8077:108:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8233:48:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8243:32:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8268:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8261:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8261:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8254:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8254:21:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8243:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8215:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8225:7:9",
                "type": ""
              }
            ],
            "src": "8191:90:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8336:50:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8353:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8373:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "8358:14:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8358:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8346:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8346:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8346:34:9"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8324:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8331:3:9",
                "type": ""
              }
            ],
            "src": "8287:99:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8568:869:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8578:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8594:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8599:4:9",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8590:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8590:14:9"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8582:4:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8614:179:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8650:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8680:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8687:4:9",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8676:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8676:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8670:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8670:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8654:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8754:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8772:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8777:4:9",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8768:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8768:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_contract$_ERC20_$1674_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8706:47:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8706:77:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8706:77:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8803:242:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8845:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8875:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8882:4:9",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8871:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8871:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8865:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8865:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8849:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8913:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8918:4:9",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8909:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8909:14:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "8929:4:9"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8935:3:9"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8925:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8925:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8902:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8902:38:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8902:38:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8953:81:9",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9015:12:9"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9029:4:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "8961:53:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8961:73:9"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8953:4:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9055:180:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9106:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9136:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9143:4:9",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9132:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9132:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9126:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9126:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9110:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9196:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9214:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9219:4:9",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9210:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9210:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9162:33:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9162:63:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9162:63:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9245:165:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9287:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9317:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9324:4:9",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9313:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9313:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9307:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9307:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9291:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9371:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9389:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9394:4:9",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9385:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9385:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "9343:27:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9343:57:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9343:57:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9420:11:9",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "9427:4:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9420:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Reserve_$371_memory_ptr_to_t_struct$_Reserve_$371_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8547:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8554:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8563:3:9",
                "type": ""
              }
            ],
            "src": "8446:991:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9589:223:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9599:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9611:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9622:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9607:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9607:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9599:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9646:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9657:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9642:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9642:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9665:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9671:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9661:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9661:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9635:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9635:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9635:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9691:114:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9791:6:9"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9800:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Reserve_$371_memory_ptr_to_t_struct$_Reserve_$371_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9699:91:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9699:106:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9691:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Reserve_$371_memory_ptr__to_t_struct$_Reserve_$371_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9561:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9573:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9584:4:9",
                "type": ""
              }
            ],
            "src": "9443:369:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9894:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9904:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9948:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "9917:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9917:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9904:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_D4Atoken_$352_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9874:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9884:9:9",
                "type": ""
              }
            ],
            "src": "9818:142:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10047:82:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10064:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10116:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_D4Atoken_$352_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10069:46:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10069:53:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10057:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10057:66:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10057:66:9"
                }
              ]
            },
            "name": "abi_encode_t_contract$_D4Atoken_$352_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10035:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10042:3:9",
                "type": ""
              }
            ],
            "src": "9966:163:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10249:140:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10259:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10271:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10282:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10267:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10267:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10259:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10355:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10368:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10379:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10364:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10364:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_D4Atoken_$352_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10295:59:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10295:87:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10295:87:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_D4Atoken_$352__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10221:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10233:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10244:4:9",
                "type": ""
              }
            ],
            "src": "10135:254:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10491:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10508:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10513:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10501:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10501:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10501:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10529:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10548:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10553:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10544:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10544:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10529:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10463:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10468:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10479:11:9",
                "type": ""
              }
            ],
            "src": "10395:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10676:63:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10698:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10706:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10694:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10694:14:9"
                      },
                      {
                        "hexValue": "546f6b656e206e6f7420737570706f72746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10710:21:9",
                        "type": "",
                        "value": "Token not supported"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10687:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10687:45:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10687:45:9"
                }
              ]
            },
            "name": "store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10668:6:9",
                "type": ""
              }
            ],
            "src": "10570:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10891:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10901:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10967:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10972:2:9",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10908:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10908:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10901:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11073:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                      "nodeType": "YulIdentifier",
                      "src": "10984:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10984:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10984:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11086:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11097:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11102:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11093:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11093:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11086:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10879:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10887:3:9",
                "type": ""
              }
            ],
            "src": "10745:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11288:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11298:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11310:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11321:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11306:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11306:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11298:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11345:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11356:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11341:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11341:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11364:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11370:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11360:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11360:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11334:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11334:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11334:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11390:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11524:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11398:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11398:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11390:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11268:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11283:4:9",
                "type": ""
              }
            ],
            "src": "11117:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11648:64:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11670:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11678:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11666:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11666:14:9"
                      },
                      {
                        "hexValue": "5769746864726177696e6720746f6f206d756368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11682:22:9",
                        "type": "",
                        "value": "Withdrawing too much"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11659:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11659:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11659:46:9"
                }
              ]
            },
            "name": "store_literal_in_memory_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11640:6:9",
                "type": ""
              }
            ],
            "src": "11542:170:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11864:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11874:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11940:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11945:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11881:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11881:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11874:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12046:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d",
                      "nodeType": "YulIdentifier",
                      "src": "11957:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11957:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11957:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12059:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12070:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12075:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12066:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12066:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12059:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11852:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11860:3:9",
                "type": ""
              }
            ],
            "src": "11718:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12261:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12271:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12283:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12294:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12279:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12279:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12271:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12318:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12329:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12314:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12314:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12337:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12343:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12333:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12333:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12307:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12307:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12307:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12363:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12497:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12371:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12371:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12363:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12241:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12256:4:9",
                "type": ""
              }
            ],
            "src": "12090:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12543:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12560:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12563:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12553:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12553:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12553:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12657:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12660:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12650:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12650:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12650:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12681:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12684:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12674:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12674:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12674:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12515:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12746:146:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12756:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12779:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12761:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12761:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12756:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12790:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12813:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12795:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12795:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12790:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12837:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12839:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12839:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12839:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12831:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12834:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12828:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12828:8:9"
                  },
                  "nodeType": "YulIf",
                  "src": "12825:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12869:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12881:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12884:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12877:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12877:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12869:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12732:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12735:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12741:4:9",
                "type": ""
              }
            ],
            "src": "12701:191:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13024:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13034:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13046:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13057:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13042:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13042:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13034:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13114:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13127:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13138:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13123:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13123:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13070:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13070:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13070:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13195:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13208:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13219:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13204:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13204:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13151:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13151:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13151:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12988:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13000:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13008:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13019:4:9",
                "type": ""
              }
            ],
            "src": "12898:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13276:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13330:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13339:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13342:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13332:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13332:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13332:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13299:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13321:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "13306:14:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13306:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13296:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13296:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13289:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13289:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "13286:60:9"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13269:5:9",
                "type": ""
              }
            ],
            "src": "13236:116:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13418:77:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13428:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "13443:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13437:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13437:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "13428:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13483:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "13459:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13459:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13459:30:9"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "13396:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13404:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13412:5:9",
                "type": ""
              }
            ],
            "src": "13358:137:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13575:271:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13621:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "13623:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13623:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13623:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13596:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13605:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13592:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13592:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13617:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13588:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13588:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "13585:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13714:125:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13729:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13743:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13733:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13758:71:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13801:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13812:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13797:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13797:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13821:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "13768:28:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13768:61:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "13758:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13545:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13556:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13568:6:9",
                "type": ""
              }
            ],
            "src": "13501:345:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14006:288:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14016:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14028:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14039:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14024:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14024:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14016:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14096:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14109:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14120:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14105:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14105:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14052:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14052:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14052:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14177:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14190:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14201:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14186:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14186:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14133:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14133:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14133:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14259:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14272:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14283:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14268:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14268:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14215:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14215:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14215:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13962:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13974:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13982:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13990:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14001:4:9",
                "type": ""
              }
            ],
            "src": "13852:442:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14406:67:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14428:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14436:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14424:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14424:14:9"
                      },
                      {
                        "hexValue": "546f6b656e20616c726561647920737570706f72746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14440:25:9",
                        "type": "",
                        "value": "Token already supported"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14417:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14417:49:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14417:49:9"
                }
              ]
            },
            "name": "store_literal_in_memory_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14398:6:9",
                "type": ""
              }
            ],
            "src": "14300:173:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14625:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14635:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14701:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14706:2:9",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14642:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14642:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14635:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14807:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944",
                      "nodeType": "YulIdentifier",
                      "src": "14718:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14718:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14718:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14820:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14831:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14836:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14827:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14827:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14820:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14613:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14621:3:9",
                "type": ""
              }
            ],
            "src": "14479:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15022:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15032:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15044:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15055:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15040:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15040:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15032:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15079:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15090:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15075:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15075:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15098:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15104:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15094:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15094:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15068:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15068:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15068:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15124:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15258:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15132:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15132:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15124:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15002:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15017:4:9",
                "type": ""
              }
            ],
            "src": "14851:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15304:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15321:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15324:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15314:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15314:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15314:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15418:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15421:4:9",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15411:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15411:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15411:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15442:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15445:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15435:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15435:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15435:15:9"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "15276:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15505:190:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15515:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15542:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15524:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15524:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "15515:5:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15638:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15640:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15640:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15640:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15563:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15570:66:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "15560:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15560:77:9"
                  },
                  "nodeType": "YulIf",
                  "src": "15557:103:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15669:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15680:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15687:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15676:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15676:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "15669:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15491:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "15501:3:9",
                "type": ""
              }
            ],
            "src": "15462:233:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15807:67:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15829:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15837:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15825:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15825:14:9"
                      },
                      {
                        "hexValue": "4e6f207265776172647320746f206265206d696e746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15841:25:9",
                        "type": "",
                        "value": "No rewards to be minted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15818:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15818:49:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15818:49:9"
                }
              ]
            },
            "name": "store_literal_in_memory_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15799:6:9",
                "type": ""
              }
            ],
            "src": "15701:173:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16026:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16036:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16102:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16107:2:9",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16043:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16043:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16036:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16208:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a",
                      "nodeType": "YulIdentifier",
                      "src": "16119:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16119:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16119:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16221:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16232:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16237:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16228:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16228:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16221:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16014:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16022:3:9",
                "type": ""
              }
            ],
            "src": "15880:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16423:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16433:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16445:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16456:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16441:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16441:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16433:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16480:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16491:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16476:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16476:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16499:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16505:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16495:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16495:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16469:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16469:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16469:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16525:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16659:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16533:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16533:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16525:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16403:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16418:4:9",
                "type": ""
              }
            ],
            "src": "16252:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16803:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16813:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16825:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16836:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16821:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16821:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16813:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16893:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16906:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16917:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16902:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16902:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16849:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16849:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16849:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16974:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16987:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16998:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16983:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16983:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16930:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16930:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16930:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16767:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16779:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16787:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16798:4:9",
                "type": ""
              }
            ],
            "src": "16677:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17169:288:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17179:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17191:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17202:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17187:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17187:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17179:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17259:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17272:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17283:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17268:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17268:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17215:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17215:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17215:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17340:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17353:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17364:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17349:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17349:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17296:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17296:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17296:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "17422:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17435:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17446:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17431:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17431:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17378:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17378:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17378:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17125:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "17137:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17145:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17153:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17164:4:9",
                "type": ""
              }
            ],
            "src": "17015:442:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17507:261:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17517:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17540:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17522:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17522:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "17517:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17551:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17574:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17556:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17556:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17551:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17714:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17716:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17716:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17716:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17635:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17642:66:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "17710:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17638:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17638:74:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17632:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17632:81:9"
                  },
                  "nodeType": "YulIf",
                  "src": "17629:107:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17746:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17757:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17760:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17753:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17753:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "17746:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17494:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17497:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "17503:3:9",
                "type": ""
              }
            ],
            "src": "17463:305:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17802:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17819:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17822:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17812:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17812:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17812:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17916:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17919:4:9",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17909:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17909:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17909:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17940:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17943:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17933:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17933:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17933:15:9"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "17774:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18011:269:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18021:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "18035:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18041:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "18031:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18031:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "18021:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18052:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "18082:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18088:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "18078:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18078:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "18056:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18129:51:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "18143:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "18157:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18165:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "18153:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18153:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "18143:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "18109:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18102:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18102:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "18099:81:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18232:42:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "18246:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18246:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18246:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "18196:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "18219:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18227:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "18216:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18216:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "18193:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18193:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "18190:84:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "17995:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "18004:6:9",
                "type": ""
              }
            ],
            "src": "17960:320:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18340:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18350:11:9",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "18358:3:9"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "18350:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18378:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "18381:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18371:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18371:14:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18371:14:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18394:26:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18412:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18415:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "18402:9:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18402:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "18394:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "18327:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "18335:4:9",
                "type": ""
              }
            ],
            "src": "18286:141:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18546:713:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18556:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18579:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "18573:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18573:12:9"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "18560:9:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18594:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "18634:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "extract_byte_array_length",
                      "nodeType": "YulIdentifier",
                      "src": "18608:25:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18608:36:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "18598:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18653:78:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18719:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18724:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18660:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18660:71:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18653:3:9"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "18780:128:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18833:3:9"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "18842:9:9"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "18857:4:9",
                                          "type": "",
                                          "value": "0xff"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "18853:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18853:9:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "18838:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "18838:25:9"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "18826:6:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18826:38:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "18826:38:9"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "18877:21:9",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18888:3:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "18893:4:9",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "18884:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18884:14:9"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "18877:3:9"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "18773:135:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18778:1:9",
                        "type": "",
                        "value": "0"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "18924:329:9",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "18969:53:9",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "19016:5:9"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_t_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "18984:31:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18984:38:9"
                            },
                            "variables": [
                              {
                                "name": "dataPos",
                                "nodeType": "YulTypedName",
                                "src": "18973:7:9",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "19035:10:9",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19044:1:9",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "19039:1:9",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "19102:110:9",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "19131:3:9"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "19136:1:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "19127:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "19127:11:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "19146:7:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "19140:5:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "19140:14:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "19120:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19120:35:9"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "19120:35:9"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "19172:26:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "19187:7:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19196:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19183:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19183:15:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulIdentifier",
                                      "src": "19172:7:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "19069:1:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "19072:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "19066:2:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19066:13:9"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "19080:21:9",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "19082:17:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "19091:1:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19094:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19087:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19087:12:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "19082:1:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "19062:3:9",
                              "statements": []
                            },
                            "src": "19058:154:9"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "19225:18:9",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "19236:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "19241:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "19232:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19232:11:9"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "19225:3:9"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "18917:336:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18922:1:9",
                        "type": "",
                        "value": "1"
                      }
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "18751:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18762:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "18747:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18747:17:9"
                  },
                  "nodeType": "YulSwitch",
                  "src": "18740:513:9"
                }
              ]
            },
            "name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18527:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18534:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "18542:3:9",
                "type": ""
              }
            ],
            "src": "18457:802:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19380:192:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19390:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19402:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19413:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19398:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19398:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19390:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19437:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19448:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19433:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19433:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19456:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19462:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19452:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19452:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19426:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19426:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19426:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19482:83:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19551:6:9"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19560:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19490:60:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19490:75:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19482:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19352:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19364:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19375:4:9",
                "type": ""
              }
            ],
            "src": "19265:307:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19620:78:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19676:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19685:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19688:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19678:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19678:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19678:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19643:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19667:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "19650:16:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19650:23:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19640:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19640:34:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19633:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19633:42:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19630:62:9"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19613:5:9",
                "type": ""
              }
            ],
            "src": "19578:120:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19766:79:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19776:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "19791:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19785:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19785:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "19776:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19833:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "19807:25:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19807:32:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19807:32:9"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "19744:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19752:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19760:5:9",
                "type": ""
              }
            ],
            "src": "19704:141:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19927:273:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19973:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "19975:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19975:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19975:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19948:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19957:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19944:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19944:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19969:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19940:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19940:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19937:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "20066:127:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "20081:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20095:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "20085:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "20110:73:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20155:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "20166:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20151:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20151:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "20175:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "20120:30:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20120:63:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "20110:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19897:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19908:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19920:6:9",
                "type": ""
              }
            ],
            "src": "19851:349:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20312:119:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20334:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20342:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20330:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20330:14:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20346:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20323:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20323:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20323:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20402:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20410:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20398:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20398:15:9"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20415:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20391:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20391:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20391:33:9"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20304:6:9",
                "type": ""
              }
            ],
            "src": "20206:225:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20583:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20593:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20659:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20664:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20600:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20600:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20593:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20765:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "20676:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20676:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20676:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20778:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20789:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20794:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20785:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20785:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20778:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20571:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20579:3:9",
                "type": ""
              }
            ],
            "src": "20437:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20980:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20990:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21002:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21013:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20998:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20998:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20990:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21037:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21048:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21033:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21033:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21056:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21062:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21052:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21052:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21026:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21026:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21026:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21082:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21216:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21090:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21090:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21082:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20960:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20975:4:9",
                "type": ""
              }
            ],
            "src": "20809:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21340:76:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21362:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21370:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21358:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21358:14:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21374:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21351:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21351:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21351:58:9"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "21332:6:9",
                "type": ""
              }
            ],
            "src": "21234:182:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21568:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21578:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21644:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21649:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21585:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21585:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21578:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21750:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "21661:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21661:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21661:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21763:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21774:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21779:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21770:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21770:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21763:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21556:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21564:3:9",
                "type": ""
              }
            ],
            "src": "21422:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21965:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21975:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21987:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21998:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21983:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21983:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21975:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22022:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22033:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22018:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22018:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22041:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22047:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22037:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22037:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22011:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22011:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22011:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22067:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22201:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22075:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22075:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22067:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21945:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21960:4:9",
                "type": ""
              }
            ],
            "src": "21794:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22267:300:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22277:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22300:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22282:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22282:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "22277:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22311:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22334:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22316:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22316:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "22311:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22509:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22511:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22511:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22511:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "22421:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "22414:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22414:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "22407:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22407:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "22429:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22436:66:9",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "22504:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "22432:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22432:74:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "22426:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22426:81:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "22403:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22403:105:9"
                  },
                  "nodeType": "YulIf",
                  "src": "22400:131:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22541:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22556:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22559:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "22552:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22552:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "22541:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22250:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22253:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "22259:7:9",
                "type": ""
              }
            ],
            "src": "22219:348:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22601:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22618:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22621:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22611:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22611:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22611:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22715:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22718:4:9",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22708:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22708:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22708:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22739:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22742:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "22732:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22732:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22732:15:9"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "22573:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22801:143:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22811:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22834:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22816:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22816:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "22811:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22845:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22868:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22850:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22850:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "22845:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22892:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "22894:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22894:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22894:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22889:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22882:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22882:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "22879:35:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22924:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22933:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22936:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "22929:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22929:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "22924:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22790:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22793:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "22799:1:9",
                "type": ""
              }
            ],
            "src": "22759:185:9"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$1674_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$1674_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$1674_to_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Market.Reserve -> struct Market.Reserve\n    function abi_encode_t_struct$_Reserve_$371_memory_ptr_to_t_struct$_Reserve_$371_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // token\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_contract$_ERC20_$1674_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // priceSymbol\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // rewardPerHourFor1TKN\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // isSupported\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Reserve_$371_memory_ptr__to_t_struct$_Reserve_$371_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Reserve_$371_memory_ptr_to_t_struct$_Reserve_$371_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function convert_t_contract$_D4Atoken_$352_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_D4Atoken_$352_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_D4Atoken_$352_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_D4Atoken_$352__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_D4Atoken_$352_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawing too much\")\n\n    }\n\n    function abi_encode_t_stringliteral_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token already supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards to be minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, 0x20)\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "343:9165:3:-:0;;;2104:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;2163:12:3;2149:11;;:26;;;;;;;;;;;;;;;;;;2197:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2185:9;;:35;;;;;;;;;;;;;;;;;;2104:123;343:9165;;640:96:8;693:7;719:10;712:17;;640:96;:::o;2433:187:4:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;343:9165:3:-;;;;;;;;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:112::-;621:7;650:24;668:5;650:24;:::i;:::-;639:35;;568:112;;;:::o;686:154::-;775:40;809:5;775:40;:::i;:::-;768:5;765:51;755:79;;830:1;827;820:12;755:79;686:154;:::o;846:175::-;919:5;950:6;944:13;935:22;;966:49;1009:5;966:49;:::i;:::-;846:175;;;;:::o;1027:383::-;1113:6;1162:2;1150:9;1141:7;1137:23;1133:32;1130:119;;;1168:79;;:::i;:::-;1130:119;1288:1;1313:80;1385:7;1376:6;1365:9;1361:22;1313:80;:::i;:::-;1303:90;;1259:144;1027:383;;;;:::o;343:9165:3:-;;;;;;;",
  "deployedSourceMap": "343:9165:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4680:586;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2823:472;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5440:625;;;:::i;:::-;;1335:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9402:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4011:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:4;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8794:168:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3576:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9119:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6340:410:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1393:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8462:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:586;4756:6;1916:8;:16;1925:6;1916:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4804:7:::1;4782:18;4793:6;4782:10;:18::i;:::-;:29;;4774:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4846:27;4866:6;4846:19;:27::i;:::-;4922:7;4883:8;:20;4892:10;4883:20;;;;;;;;;;;;;;;:28;4904:6;4883:28;;;;;;;;;;;;;;;:35;;;:46;;;;;;;:::i;:::-;;;;;;;;4963:1;4942:18;4953:6;4942:10;:18::i;:::-;:22;4939:205;;;5033:15;4980:8;:20;4989:10;4980:20;;;;;;;;;;;;;;;:28;5001:6;4980:28;;;;;;;;;;;;;;;:50;;:68;;;;4939:205;;;5132:1;5079:8;:20;5088:10;5079:20;;;;;;;;;;;;;;;:28;5100:6;5079:28;;;;;;;;;;;;;;;:50;;:54;;;;4939:205;5153:8;:16;5162:6;5153:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:31;;;5185:10;5197:7;5153:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5220:39;5230:7;5240:6;5248:10;5220:39;;;;;;;;:::i;:::-;;;;;;;;4680:586:::0;;;:::o;2823:472::-;1094:13:4;:11;:13::i;:::-;2982:5:3::1;2950:37;;:8;:16;2959:6;2950:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:37;;;2942:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3044:182;;;;;;;;3079:6;3044:182;;;;;;3115:12;3044:182;;;;3163:21;3044:182;;;;3211:4;3044:182;;;;::::0;3025:8:::1;:16;3034:6;3025:16;;;;;;;;;;;;;;;:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3236:6;3248;3236:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3270:18;3281:6;3270:18;;;;;;:::i;:::-;;;;;;;;2823:472:::0;;;:::o;5440:625::-;5476:17;5503:11;5528:6;5524:286;5544:6;:13;;;;5540:1;:17;5524:286;;;5589:6;5596:1;5589:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5577:21;;5644:1;5615:26;5631:9;5615:15;:26::i;:::-;:30;5612:188;;;5666:30;5686:9;5666:19;:30::i;:::-;5770:15;5714:8;:20;5723:10;5714:20;;;;;;;;;;;;;;;:31;5735:9;5714:31;;;;;;;;;;;;;;;:53;;:71;;;;5612:188;5559:3;;;;:::i;:::-;;;5524:286;;;;5856:1;5827:14;:26;5842:10;5827:26;;;;;;;;;;;;;;;;:30;5819:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5904:14;:26;5919:10;5904:26;;;;;;;;;;;;;;;;5895:35;;5969:1;5940:14;:26;5955:10;5940:26;;;;;;;;;;;;;;;:30;;;;5980:11;;;;;;;;;;;:16;;;5997:10;6009:6;5980:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6031:27;6039:6;6047:10;6031:27;;;;;;;:::i;:::-;;;;;;;;5466:599;;5440:625::o;1335:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9402:104::-;9450:4;9473:14;:26;9488:10;9473:26;;;;;;;;;;;;;;;;9466:33;;9402:104;:::o;4011:395::-;4086:6;1916:8;:16;1925:6;1916:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4104:8:::1;:16;4113:6;4104:16;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:35;;;4140:10;4160:4;4167:7;4104:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4238:15;4185:8;:20;4194:10;4185:20;;;;;;;;;;;;;;;:28;4206:6;4185:28;;;;;;;;;;;;;;;:50;;:68;;;;4263:27;4283:6;4263:19;:27::i;:::-;4339:7;4300:8;:20;4309:10;4300:20;;;;;;;;;;;;;;;:28;4321:6;4300:28;;;;;;;;;;;;;;;:35;;;:46;;;;;;;:::i;:::-;;;;;;;;4361:38;4371:7;4380:6;4388:10;4361:38;;;;;;;;:::i;:::-;;;;;;;;4011:395:::0;;;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;8794:168:3:-;8882:4;8866:6;1916:8;:16;1925:6;1916:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;8905:8:::1;:20;8914:10;8905:20;;;;;;;;;;;;;;;:28;8926:6;8905:28;;;;;;;;;;;;;;;:50;;;8898:57;;8794:168:::0;;;;:::o;3576:166::-;3659:3;3642:6;1916:8;:16;1925:6;1916:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3681:9:::1;;;;;;;;;;;:24;;;3706:8;:16;3715:6;3706:16;;;;;;;;;;;;;;;:28;;3681:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3674:61;;3576:166:::0;;;;:::o;9119:139::-;9202:14;;:::i;:::-;9186:6;1916:8;:16;1925:6;1916:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;9235:8:::1;:16;9244:6;9235:16;;;;;;;;;;;;;;;9228:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;9119:139:::0;;;;:::o;2081:198:4:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6340:410:3:-;6400:4;6416:17;6443;6463:14;:26;6478:10;6463:26;;;;;;;;;;;;;;;;6443:46;;6503:6;6499:216;6519:6;:13;;;;6515:1;:17;6499:216;;;6564:6;6571:1;6564:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6552:21;;6620:1;6591:26;6607:9;6591:15;:26::i;:::-;:30;6587:118;;;6658:32;6680:9;6658:21;:32::i;:::-;6642:48;;;;;:::i;:::-;;;6587:118;6534:3;;;;:::i;:::-;;;6499:216;;;;6731:12;6724:19;;;;6340:410;:::o;1393:27::-;;;;;;;;;;;;;:::o;8462:148::-;8545:4;8529:6;1916:8;:16;1925:6;1916:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;8568:8:::1;:20;8577:10;8568:20;;;;;;;;;;;;;;;:28;8589:6;8568:28;;;;;;;;;;;;;;;:35;;;8561:42;;8462:148:::0;;;;:::o;8054:224::-;8126:6;1916:8;:16;1925:6;1916:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;8174:29:::1;8196:6;8174:21;:29::i;:::-;8144:14;:26;8159:10;8144:26;;;;;;;;;;;;;;;;:59;;;;;;;:::i;:::-;;;;;;;;8218:53;8232:14;:26;8247:10;8232:26;;;;;;;;;;;;;;;;8260:10;8218:53;;;;;;;:::i;:::-;;;;;;;;8054:224:::0;;:::o;1359:130:4:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7054:707:3:-;7149:4;7133:6;1916:8;:16;1925:6;1916:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7165:19:::1;7187:18;7198:6;7187:10;:18::i;:::-;7165:40;;7215:17;7235:23;7251:6;7235:15;:23::i;:::-;7215:43;;7268:25;7296:8;:16;7305:6;7296:16;;;;;;;;;;;;;;;:37;;;7268:65;;7361:1;7346:12;:16;:38;;;;;7383:1;7366:14;:18;7346:38;7343:412;;;7489:25;7558:7;7535:20;7518:14;:37;;;;:::i;:::-;7517:49;;;;:::i;:::-;7489:77;;7701:4;7677:20;7661:12;7643:15;:30;;;;:::i;:::-;7642:55;;;;:::i;:::-;7641:64;;;;:::i;:::-;7634:71;;;;;;;;7343:412;7743:1;7736:8;;;;;1978:1;7054:707:::0;;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:117::-;1786:1;1783;1776:12;1800:117;1909:1;1906;1899:12;1923:102;1964:6;2015:2;2011:7;2006:2;1999:5;1995:14;1991:28;1981:38;;1923:102;;;:::o;2031:180::-;2079:77;2076:1;2069:88;2176:4;2173:1;2166:15;2200:4;2197:1;2190:15;2217:281;2300:27;2322:4;2300:27;:::i;:::-;2292:6;2288:40;2430:6;2418:10;2415:22;2394:18;2382:10;2379:34;2376:62;2373:88;;;2441:18;;:::i;:::-;2373:88;2481:10;2477:2;2470:22;2260:238;2217:281;;:::o;2504:129::-;2538:6;2565:20;;:::i;:::-;2555:30;;2594:33;2622:4;2614:6;2594:33;:::i;:::-;2504:129;;;:::o;2639:308::-;2701:4;2791:18;2783:6;2780:30;2777:56;;;2813:18;;:::i;:::-;2777:56;2851:29;2873:6;2851:29;:::i;:::-;2843:37;;2935:4;2929;2925:15;2917:23;;2639:308;;;:::o;2953:154::-;3037:6;3032:3;3027;3014:30;3099:1;3090:6;3085:3;3081:16;3074:27;2953:154;;;:::o;3113:412::-;3191:5;3216:66;3232:49;3274:6;3232:49;:::i;:::-;3216:66;:::i;:::-;3207:75;;3305:6;3298:5;3291:21;3343:4;3336:5;3332:16;3381:3;3372:6;3367:3;3363:16;3360:25;3357:112;;;3388:79;;:::i;:::-;3357:112;3478:41;3512:6;3507:3;3502;3478:41;:::i;:::-;3197:328;3113:412;;;;;:::o;3545:340::-;3601:5;3650:3;3643:4;3635:6;3631:17;3627:27;3617:122;;3658:79;;:::i;:::-;3617:122;3775:6;3762:20;3800:79;3875:3;3867:6;3860:4;3852:6;3848:17;3800:79;:::i;:::-;3791:88;;3607:278;3545:340;;;;:::o;3891:799::-;3978:6;3986;3994;4043:2;4031:9;4022:7;4018:23;4014:32;4011:119;;;4049:79;;:::i;:::-;4011:119;4169:1;4194:53;4239:7;4230:6;4219:9;4215:22;4194:53;:::i;:::-;4184:63;;4140:117;4296:2;4322:53;4367:7;4358:6;4347:9;4343:22;4322:53;:::i;:::-;4312:63;;4267:118;4452:2;4441:9;4437:18;4424:32;4483:18;4475:6;4472:30;4469:117;;;4505:79;;:::i;:::-;4469:117;4610:63;4665:7;4656:6;4645:9;4641:22;4610:63;:::i;:::-;4600:73;;4395:288;3891:799;;;;;:::o;4696:329::-;4755:6;4804:2;4792:9;4783:7;4779:23;4775:32;4772:119;;;4810:79;;:::i;:::-;4772:119;4930:1;4955:53;5000:7;4991:6;4980:9;4976:22;4955:53;:::i;:::-;4945:63;;4901:117;4696:329;;;;:::o;5031:118::-;5118:24;5136:5;5118:24;:::i;:::-;5113:3;5106:37;5031:118;;:::o;5155:222::-;5248:4;5286:2;5275:9;5271:18;5263:26;;5299:71;5367:1;5356:9;5352:17;5343:6;5299:71;:::i;:::-;5155:222;;;;:::o;5383:118::-;5470:24;5488:5;5470:24;:::i;:::-;5465:3;5458:37;5383:118;;:::o;5507:222::-;5600:4;5638:2;5627:9;5623:18;5615:26;;5651:71;5719:1;5708:9;5704:17;5695:6;5651:71;:::i;:::-;5507:222;;;;:::o;5735:329::-;5794:6;5843:2;5831:9;5822:7;5818:23;5814:32;5811:119;;;5849:79;;:::i;:::-;5811:119;5969:1;5994:53;6039:7;6030:6;6019:9;6015:22;5994:53;:::i;:::-;5984:63;;5940:117;5735:329;;;;:::o;6070:76::-;6106:7;6135:5;6124:16;;6070:76;;;:::o;6152:115::-;6237:23;6254:5;6237:23;:::i;:::-;6232:3;6225:36;6152:115;;:::o;6273:218::-;6364:4;6402:2;6391:9;6387:18;6379:26;;6415:69;6481:1;6470:9;6466:17;6457:6;6415:69;:::i;:::-;6273:218;;;;:::o;6497:60::-;6525:3;6546:5;6539:12;;6497:60;;;:::o;6563:142::-;6613:9;6646:53;6664:34;6673:24;6691:5;6673:24;:::i;:::-;6664:34;:::i;:::-;6646:53;:::i;:::-;6633:66;;6563:142;;;:::o;6711:126::-;6761:9;6794:37;6825:5;6794:37;:::i;:::-;6781:50;;6711:126;;;:::o;6843:140::-;6907:9;6940:37;6971:5;6940:37;:::i;:::-;6927:50;;6843:140;;;:::o;6989:149::-;7080:51;7125:5;7080:51;:::i;:::-;7075:3;7068:64;6989:149;;:::o;7144:99::-;7196:6;7230:5;7224:12;7214:22;;7144:99;;;:::o;7249:159::-;7323:11;7357:6;7352:3;7345:19;7397:4;7392:3;7388:14;7373:29;;7249:159;;;;:::o;7414:307::-;7482:1;7492:113;7506:6;7503:1;7500:13;7492:113;;;7591:1;7586:3;7582:11;7576:18;7572:1;7567:3;7563:11;7556:39;7528:2;7525:1;7521:10;7516:15;;7492:113;;;7623:6;7620:1;7617:13;7614:101;;;7703:1;7694:6;7689:3;7685:16;7678:27;7614:101;7463:258;7414:307;;;:::o;7727:344::-;7805:3;7833:39;7866:5;7833:39;:::i;:::-;7888:61;7942:6;7937:3;7888:61;:::i;:::-;7881:68;;7958:52;8003:6;7998:3;7991:4;7984:5;7980:16;7958:52;:::i;:::-;8035:29;8057:6;8035:29;:::i;:::-;8030:3;8026:39;8019:46;;7809:262;7727:344;;;;:::o;8077:108::-;8154:24;8172:5;8154:24;:::i;:::-;8149:3;8142:37;8077:108;;:::o;8191:90::-;8225:7;8268:5;8261:13;8254:21;8243:32;;8191:90;;;:::o;8287:99::-;8358:21;8373:5;8358:21;:::i;:::-;8353:3;8346:34;8287:99;;:::o;8446:991::-;8563:3;8599:4;8594:3;8590:14;8687:4;8680:5;8676:16;8670:23;8706:77;8777:4;8772:3;8768:14;8754:12;8706:77;:::i;:::-;8614:179;8882:4;8875:5;8871:16;8865:23;8935:3;8929:4;8925:14;8918:4;8913:3;8909:14;8902:38;8961:73;9029:4;9015:12;8961:73;:::i;:::-;8953:81;;8803:242;9143:4;9136:5;9132:16;9126:23;9162:63;9219:4;9214:3;9210:14;9196:12;9162:63;:::i;:::-;9055:180;9324:4;9317:5;9313:16;9307:23;9343:57;9394:4;9389:3;9385:14;9371:12;9343:57;:::i;:::-;9245:165;9427:4;9420:11;;8568:869;8446:991;;;;:::o;9443:369::-;9584:4;9622:2;9611:9;9607:18;9599:26;;9671:9;9665:4;9661:20;9657:1;9646:9;9642:17;9635:47;9699:106;9800:4;9791:6;9699:106;:::i;:::-;9691:114;;9443:369;;;;:::o;9818:142::-;9884:9;9917:37;9948:5;9917:37;:::i;:::-;9904:50;;9818:142;;;:::o;9966:163::-;10069:53;10116:5;10069:53;:::i;:::-;10064:3;10057:66;9966:163;;:::o;10135:254::-;10244:4;10282:2;10271:9;10267:18;10259:26;;10295:87;10379:1;10368:9;10364:17;10355:6;10295:87;:::i;:::-;10135:254;;;;:::o;10395:169::-;10479:11;10513:6;10508:3;10501:19;10553:4;10548:3;10544:14;10529:29;;10395:169;;;;:::o;10570:::-;10710:21;10706:1;10698:6;10694:14;10687:45;10570:169;:::o;10745:366::-;10887:3;10908:67;10972:2;10967:3;10908:67;:::i;:::-;10901:74;;10984:93;11073:3;10984:93;:::i;:::-;11102:2;11097:3;11093:12;11086:19;;10745:366;;;:::o;11117:419::-;11283:4;11321:2;11310:9;11306:18;11298:26;;11370:9;11364:4;11360:20;11356:1;11345:9;11341:17;11334:47;11398:131;11524:4;11398:131;:::i;:::-;11390:139;;11117:419;;;:::o;11542:170::-;11682:22;11678:1;11670:6;11666:14;11659:46;11542:170;:::o;11718:366::-;11860:3;11881:67;11945:2;11940:3;11881:67;:::i;:::-;11874:74;;11957:93;12046:3;11957:93;:::i;:::-;12075:2;12070:3;12066:12;12059:19;;11718:366;;;:::o;12090:419::-;12256:4;12294:2;12283:9;12279:18;12271:26;;12343:9;12337:4;12333:20;12329:1;12318:9;12314:17;12307:47;12371:131;12497:4;12371:131;:::i;:::-;12363:139;;12090:419;;;:::o;12515:180::-;12563:77;12560:1;12553:88;12660:4;12657:1;12650:15;12684:4;12681:1;12674:15;12701:191;12741:4;12761:20;12779:1;12761:20;:::i;:::-;12756:25;;12795:20;12813:1;12795:20;:::i;:::-;12790:25;;12834:1;12831;12828:8;12825:34;;;12839:18;;:::i;:::-;12825:34;12884:1;12881;12877:9;12869:17;;12701:191;;;;:::o;12898:332::-;13019:4;13057:2;13046:9;13042:18;13034:26;;13070:71;13138:1;13127:9;13123:17;13114:6;13070:71;:::i;:::-;13151:72;13219:2;13208:9;13204:18;13195:6;13151:72;:::i;:::-;12898:332;;;;;:::o;13236:116::-;13306:21;13321:5;13306:21;:::i;:::-;13299:5;13296:32;13286:60;;13342:1;13339;13332:12;13286:60;13236:116;:::o;13358:137::-;13412:5;13443:6;13437:13;13428:22;;13459:30;13483:5;13459:30;:::i;:::-;13358:137;;;;:::o;13501:345::-;13568:6;13617:2;13605:9;13596:7;13592:23;13588:32;13585:119;;;13623:79;;:::i;:::-;13585:119;13743:1;13768:61;13821:7;13812:6;13801:9;13797:22;13768:61;:::i;:::-;13758:71;;13714:125;13501:345;;;;:::o;13852:442::-;14001:4;14039:2;14028:9;14024:18;14016:26;;14052:71;14120:1;14109:9;14105:17;14096:6;14052:71;:::i;:::-;14133:72;14201:2;14190:9;14186:18;14177:6;14133:72;:::i;:::-;14215;14283:2;14272:9;14268:18;14259:6;14215:72;:::i;:::-;13852:442;;;;;;:::o;14300:173::-;14440:25;14436:1;14428:6;14424:14;14417:49;14300:173;:::o;14479:366::-;14621:3;14642:67;14706:2;14701:3;14642:67;:::i;:::-;14635:74;;14718:93;14807:3;14718:93;:::i;:::-;14836:2;14831:3;14827:12;14820:19;;14479:366;;;:::o;14851:419::-;15017:4;15055:2;15044:9;15040:18;15032:26;;15104:9;15098:4;15094:20;15090:1;15079:9;15075:17;15068:47;15132:131;15258:4;15132:131;:::i;:::-;15124:139;;14851:419;;;:::o;15276:180::-;15324:77;15321:1;15314:88;15421:4;15418:1;15411:15;15445:4;15442:1;15435:15;15462:233;15501:3;15524:24;15542:5;15524:24;:::i;:::-;15515:33;;15570:66;15563:5;15560:77;15557:103;;15640:18;;:::i;:::-;15557:103;15687:1;15680:5;15676:13;15669:20;;15462:233;;;:::o;15701:173::-;15841:25;15837:1;15829:6;15825:14;15818:49;15701:173;:::o;15880:366::-;16022:3;16043:67;16107:2;16102:3;16043:67;:::i;:::-;16036:74;;16119:93;16208:3;16119:93;:::i;:::-;16237:2;16232:3;16228:12;16221:19;;15880:366;;;:::o;16252:419::-;16418:4;16456:2;16445:9;16441:18;16433:26;;16505:9;16499:4;16495:20;16491:1;16480:9;16476:17;16469:47;16533:131;16659:4;16533:131;:::i;:::-;16525:139;;16252:419;;;:::o;16677:332::-;16798:4;16836:2;16825:9;16821:18;16813:26;;16849:71;16917:1;16906:9;16902:17;16893:6;16849:71;:::i;:::-;16930:72;16998:2;16987:9;16983:18;16974:6;16930:72;:::i;:::-;16677:332;;;;;:::o;17015:442::-;17164:4;17202:2;17191:9;17187:18;17179:26;;17215:71;17283:1;17272:9;17268:17;17259:6;17215:71;:::i;:::-;17296:72;17364:2;17353:9;17349:18;17340:6;17296:72;:::i;:::-;17378;17446:2;17435:9;17431:18;17422:6;17378:72;:::i;:::-;17015:442;;;;;;:::o;17463:305::-;17503:3;17522:20;17540:1;17522:20;:::i;:::-;17517:25;;17556:20;17574:1;17556:20;:::i;:::-;17551:25;;17710:1;17642:66;17638:74;17635:1;17632:81;17629:107;;;17716:18;;:::i;:::-;17629:107;17760:1;17757;17753:9;17746:16;;17463:305;;;;:::o;17774:180::-;17822:77;17819:1;17812:88;17919:4;17916:1;17909:15;17943:4;17940:1;17933:15;17960:320;18004:6;18041:1;18035:4;18031:12;18021:22;;18088:1;18082:4;18078:12;18109:18;18099:81;;18165:4;18157:6;18153:17;18143:27;;18099:81;18227:2;18219:6;18216:14;18196:18;18193:38;18190:84;;18246:18;;:::i;:::-;18190:84;18011:269;17960:320;;;:::o;18286:141::-;18335:4;18358:3;18350:11;;18381:3;18378:1;18371:14;18415:4;18412:1;18402:18;18394:26;;18286:141;;;:::o;18457:802::-;18542:3;18579:5;18573:12;18608:36;18634:9;18608:36;:::i;:::-;18660:71;18724:6;18719:3;18660:71;:::i;:::-;18653:78;;18762:1;18751:9;18747:17;18778:1;18773:135;;;;18922:1;18917:336;;;;18740:513;;18773:135;18857:4;18853:9;18842;18838:25;18833:3;18826:38;18893:4;18888:3;18884:14;18877:21;;18773:135;;18917:336;18984:38;19016:5;18984:38;:::i;:::-;19044:1;19058:154;19072:6;19069:1;19066:13;19058:154;;;19146:7;19140:14;19136:1;19131:3;19127:11;19120:35;19196:1;19187:7;19183:15;19172:26;;19094:4;19091:1;19087:12;19082:17;;19058:154;;;19241:1;19236:3;19232:11;19225:18;;18924:329;;18740:513;;18546:713;;18457:802;;;;:::o;19265:307::-;19375:4;19413:2;19402:9;19398:18;19390:26;;19462:9;19456:4;19452:20;19448:1;19437:9;19433:17;19426:47;19490:75;19560:4;19551:6;19490:75;:::i;:::-;19482:83;;19265:307;;;;:::o;19578:120::-;19650:23;19667:5;19650:23;:::i;:::-;19643:5;19640:34;19630:62;;19688:1;19685;19678:12;19630:62;19578:120;:::o;19704:141::-;19760:5;19791:6;19785:13;19776:22;;19807:32;19833:5;19807:32;:::i;:::-;19704:141;;;;:::o;19851:349::-;19920:6;19969:2;19957:9;19948:7;19944:23;19940:32;19937:119;;;19975:79;;:::i;:::-;19937:119;20095:1;20120:63;20175:7;20166:6;20155:9;20151:22;20120:63;:::i;:::-;20110:73;;20066:127;19851:349;;;;:::o;20206:225::-;20346:34;20342:1;20334:6;20330:14;20323:58;20415:8;20410:2;20402:6;20398:15;20391:33;20206:225;:::o;20437:366::-;20579:3;20600:67;20664:2;20659:3;20600:67;:::i;:::-;20593:74;;20676:93;20765:3;20676:93;:::i;:::-;20794:2;20789:3;20785:12;20778:19;;20437:366;;;:::o;20809:419::-;20975:4;21013:2;21002:9;20998:18;20990:26;;21062:9;21056:4;21052:20;21048:1;21037:9;21033:17;21026:47;21090:131;21216:4;21090:131;:::i;:::-;21082:139;;20809:419;;;:::o;21234:182::-;21374:34;21370:1;21362:6;21358:14;21351:58;21234:182;:::o;21422:366::-;21564:3;21585:67;21649:2;21644:3;21585:67;:::i;:::-;21578:74;;21661:93;21750:3;21661:93;:::i;:::-;21779:2;21774:3;21770:12;21763:19;;21422:366;;;:::o;21794:419::-;21960:4;21998:2;21987:9;21983:18;21975:26;;22047:9;22041:4;22037:20;22033:1;22022:9;22018:17;22011:47;22075:131;22201:4;22075:131;:::i;:::-;22067:139;;21794:419;;;:::o;22219:348::-;22259:7;22282:20;22300:1;22282:20;:::i;:::-;22277:25;;22316:20;22334:1;22316:20;:::i;:::-;22311:25;;22504:1;22436:66;22432:74;22429:1;22426:81;22421:1;22414:9;22407:17;22403:105;22400:131;;;22511:18;;:::i;:::-;22400:131;22559:1;22556;22552:9;22541:20;;22219:348;;;;:::o;22573:180::-;22621:77;22618:1;22611:88;22718:4;22715:1;22708:15;22742:4;22739:1;22732:15;22759:185;22799:1;22816:20;22834:1;22816:20;:::i;:::-;22811:25;;22850:20;22868:1;22850:20;:::i;:::-;22845:25;;22889:1;22879:35;;22894:18;;:::i;:::-;22879:35;22936:1;22933;22929:9;22924:14;;22759:185;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.14;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./D4Atoken.sol\";\nimport \"./ChainlinkKovanUSD.sol\";\n\n/// @title Stacking project\n/// @notice Staking with deposit, withdrawal and rewards\ncontract Market is Ownable {\n\n    // We need to keep the timestamp of the last transaction(deposit, withdraw or claim) to calculate the reward balance at each of those actions\n    struct  Reserve {\n        ERC20 token;\n        string priceSymbol;\n        uint rewardPerHourFor1TKN; //we want Xwei tokens per hour for 1ether stacked token\n        bool isSupported;\n    }\n\n    struct  Balance {\n        uint amount;\n        uint lastTransactTimeStamp;\n    }\n\n    mapping(address => Reserve) private reserves;\n\n    //we make a map for each users addresses we have a map of token addresses to the user balance in that token\n    mapping(address => mapping(address => Balance)) private balances;\n    \n    //the amount of rewards for each users\n    mapping(address => uint) private rewardBalances;\n\n    //we have to keep the addresses of accepted tokens to iterate over the map when we claim\n    //because onlyOwner can add tokens we shouldn't have an array too big\n    //public for units tests\n    address[] public tokens;\n    //public for units tests\n    D4Atoken public rewardToken;\n    ChainlinkKovanUSD pricesUSD;\n    \n    event TokenAdded(address asset);\n    event Deposited(uint amount, address asset, address user);\n    event Withdrawn(uint amount, address asset, address user);\n    event RewardUpdated(uint amount, address user);\n    event Claimed(uint amount, address user);\n\n    /// @notice Check if the asset given to the function as been added\n    /// @param _asset The address of the asset to check.\n    modifier onlySupportedToken(address _asset) {\n        require(reserves[_asset].isSupported, \"Token not supported\");\n        _;\n    }\n\n    /// @notice Set the reward token and chainlink to get prices.\n    /// @param _rewardToken The reward token.\n    constructor(D4Atoken _rewardToken) {\n        rewardToken = _rewardToken;\n        pricesUSD = new ChainlinkKovanUSD();\n    } \n\n    /// @notice Register a token to be supported by the market.\n    /// @dev  The owner associate the price of the token by using the corresponding map of ChainlinkKovanUSD.\n    /// @param _asset The address of the token to be added.\n    /// @param _rewardPerHourFor1TKN The number of reward tokens in wei units to be minted for 1 ether units of the given asset during 1 hour.\n    /// @param _priceSymbol The symbol of the token to be looked for in chainlink when we want the price of the asset. Can be different of the asset symbol. (ex: D4A => DAI, D4A will have the same price as DAI).\n    function addToken(address _asset, uint _rewardPerHourFor1TKN, string memory _priceSymbol) external onlyOwner {\n        require(reserves[_asset].isSupported == false ,\"Token already supported\");\n        reserves[_asset] = Reserve({\n            token: ERC20(_asset), \n            priceSymbol : _priceSymbol,\n            rewardPerHourFor1TKN: _rewardPerHourFor1TKN,\n            isSupported: true\n        });\n        tokens.push(_asset);\n        emit TokenAdded(_asset);\n    }\n\n    /// @notice Get the price of the asset in USD.\n    /// @dev Uses Chainlink datafeeds on kovan. The result must be divided by 8 to get the correct dollar decimal.\n    /// @param _asset The address of the token for wich we want the price.\n    /// @return The price in USD.\n    function priceOf(address _asset) external view onlySupportedToken(_asset) returns (int) {\n        return pricesUSD.getLatestPrice(reserves[_asset].priceSymbol);\n    }\n\n    /// @notice Allows a user to deposit Xwei tokens.\n    /// @dev We update all of our informations once the transaction has succeded.\n    /// @param _amount The amount of asset in wei to be deposited.\n    /// @param _asset The address of the token to be stack.\n    function deposit(uint _amount, address _asset) external onlySupportedToken(_asset) {\n        reserves[_asset].token.transferFrom(msg.sender, address(this), _amount);\n        balances[msg.sender][_asset].lastTransactTimeStamp = block.timestamp;\n        updateRewardBalance(_asset);\n        balances[msg.sender][_asset].amount += _amount;\n        emit Deposited(_amount, _asset, msg.sender);\n    }\n\n    /// @notice Allows a user to withdraw Xwei tokens.\n    /// @dev We update all of our informations once the transaction has succeded.\n    /// @param _amount The amount of asset in wei to be withdrawn.\n    /// @param _asset The address of the token to be withdrawn.\n    function withdraw(uint _amount, address _asset) external onlySupportedToken(_asset) {\n        require(getBalance(_asset) >= _amount, \"Withdrawing too much\");\n        updateRewardBalance(_asset);\n        balances[msg.sender][_asset].amount -= _amount;\n        if(getBalance(_asset) > 0 ){\n            balances[msg.sender][_asset].lastTransactTimeStamp = block.timestamp;\n        } else {\n            balances[msg.sender][_asset].lastTransactTimeStamp = 0;\n        }\n        reserves[_asset].token.transfer(msg.sender, _amount);\n        emit Withdrawn(_amount,  _asset, msg.sender);\n    }\n\n    /// @notice Allows a user to retrieve his accumulated reward tokens\n    /// @dev This function must be strongly secure as we mint the calculated amount at the end.\n    function claim() external {\n        address tokenAddr;\n        uint reward;\n        for(uint i = 0; i < tokens.length; ++i){\n            tokenAddr = tokens[i];\n            if(getLastTransact(tokenAddr) > 0 ) {\n                updateRewardBalance(tokenAddr);\n                balances[msg.sender][tokenAddr].lastTransactTimeStamp = block.timestamp;\n            }\n        }\n        require(rewardBalances[msg.sender] > 0, \"No rewards to be minted\");\n        reward = rewardBalances[msg.sender];\n        rewardBalances[msg.sender] = 0;\n        rewardToken.mint(msg.sender, reward);\n        emit Claimed(reward, msg.sender);\n    }\n\n    /// @notice Calculate the global reward balance of a user with the rewards accumulated for ALL tokens.\n    /// @dev This function allow to check the global rewards without modifying state variables. Developper can then call this function rapidely in the front-end.\n    function calculateTotalRewardEarned() external view returns(uint) {\n        address tokenAddr;\n        uint totalRewards = rewardBalances[msg.sender];\n        for(uint i = 0; i < tokens.length; ++i){\n            tokenAddr = tokens[i];\n            if( getLastTransact(tokenAddr) > 0 ) {\n                totalRewards += calculateRewardEarned(tokenAddr);\n            }\n        }\n        return totalRewards;\n    }\n\n    /// @notice Calculate the rewards earned for a specific token.\n    /// @dev Keeping track of the last transaction (deposit, withdraw, claim), allow us to calculate rewards earned between last transaction and now.\n    /// @param _asset The address of the token we want to calculate the rewards.\n    function calculateRewardEarned(address _asset) private view onlySupportedToken(_asset) returns(uint) {\n        uint currentBalance = getBalance(_asset);\n        uint lastTransact = getLastTransact(_asset);\n        uint rewardPerHourFor1TKN = reserves[_asset].rewardPerHourFor1TKN;\n        if(lastTransact > 0 && currentBalance > 0) {\n            //We have to calculate the number of rewards by hour for the current balance\n            uint rewardCurrentBalance = (currentBalance * rewardPerHourFor1TKN)/(1 ether);\n            //We can now calculate the rewards gained\n            return ((block.timestamp - lastTransact) * rewardCurrentBalance) / 3600;\n        } else {\n            return 0;\n        }\n    }\n\n    /// @notice Update the global reward balance of a user with the rewards accumulated for one token.\n    /// @dev Keeping track of the last transaction (deposit, withdraw, claim), allow us to update the global reward balance each time we make a transaction (deposit, withdraw, claim).\n    function updateRewardBalance(address _asset) private onlySupportedToken(_asset) {\n        rewardBalances[msg.sender] += calculateRewardEarned(_asset);\n        emit RewardUpdated(rewardBalances[msg.sender], msg.sender);\n    }\n\n    /// @notice Retrieve the amount of token stacked.\n    /// @dev Public for unit tests.\n    /// @param _asset The address of the token we want to calculate the amount stacked.\n    function getBalance(address _asset) public view onlySupportedToken(_asset) returns(uint) {\n        return balances[msg.sender][_asset].amount;\n    }\n\n    /// @notice Retrieve the time of the last traansaction.\n    /// @dev Public for unit tests.\n    /// @param _asset The address of the token we want the last transaction time.\n    function getLastTransact(address _asset) public view onlySupportedToken(_asset) returns(uint) {\n        return balances[msg.sender][_asset].lastTransactTimeStamp;\n    }\n\n    /// @notice Retrieve the reserve of a token.\n    /// @dev Made for unit tests.\n    /// @param _asset The address of the token we want the reserve.\n    function getReserve(address _asset) public view onlySupportedToken(_asset) returns(Reserve memory) {\n        return reserves[_asset];\n    }\n\n    /// @notice Retrieve the global reward balance.\n    /// @dev Made for unit tests.\n    /// @return The amount of reward tokens earned.\n    function getRewardBalance() public view returns(uint) {\n        return rewardBalances[msg.sender];\n    }\n}\n",
  "sourcePath": "/mnt/d/ALYRA/Projet #4/Alyra_DeFi/truffle/contracts/Market.sol",
  "ast": {
    "absolutePath": "project:/contracts/Market.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "ChainlinkKovanUSD": [
        265
      ],
      "Context": [
        1799
      ],
      "D4Atoken": [
        352
      ],
      "ERC20": [
        1674
      ],
      "IERC20": [
        1752
      ],
      "IERC20Metadata": [
        1777
      ],
      "Market": [
        975
      ],
      "Ownable": [
        1088
      ]
    },
    "id": 976,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 354,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 355,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 976,
        "sourceUnit": 1675,
        "src": "57:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 356,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 976,
        "sourceUnit": 1089,
        "src": "129:68:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/D4Atoken.sol",
        "file": "./D4Atoken.sol",
        "id": 357,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 976,
        "sourceUnit": 353,
        "src": "198:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ChainlinkKovanUSD.sol",
        "file": "./ChainlinkKovanUSD.sol",
        "id": 358,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 976,
        "sourceUnit": 266,
        "src": "223:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 360,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1088,
              "src": "362:7:3"
            },
            "id": 361,
            "nodeType": "InheritanceSpecifier",
            "src": "362:7:3"
          }
        ],
        "canonicalName": "Market",
        "contractDependencies": [
          265
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 359,
          "nodeType": "StructuredDocumentation",
          "src": "258:85:3",
          "text": "@title Stacking project\n @notice Staking with deposit, withdrawal and rewards"
        },
        "fullyImplemented": true,
        "id": 975,
        "linearizedBaseContracts": [
          975,
          1088,
          1799
        ],
        "name": "Market",
        "nameLocation": "352:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Market.Reserve",
            "id": 371,
            "members": [
              {
                "constant": false,
                "id": 364,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "555:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 371,
                "src": "549:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$1674",
                  "typeString": "contract ERC20"
                },
                "typeName": {
                  "id": 363,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 362,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1674,
                    "src": "549:5:3"
                  },
                  "referencedDeclaration": 1674,
                  "src": "549:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1674",
                    "typeString": "contract ERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 366,
                "mutability": "mutable",
                "name": "priceSymbol",
                "nameLocation": "577:11:3",
                "nodeType": "VariableDeclaration",
                "scope": 371,
                "src": "570:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 365,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "570:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 368,
                "mutability": "mutable",
                "name": "rewardPerHourFor1TKN",
                "nameLocation": "603:20:3",
                "nodeType": "VariableDeclaration",
                "scope": 371,
                "src": "598:25:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 367,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "598:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 370,
                "mutability": "mutable",
                "name": "isSupported",
                "nameLocation": "694:11:3",
                "nodeType": "VariableDeclaration",
                "scope": 371,
                "src": "689:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 369,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "689:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Reserve",
            "nameLocation": "531:7:3",
            "nodeType": "StructDefinition",
            "scope": 975,
            "src": "523:189:3",
            "visibility": "public"
          },
          {
            "canonicalName": "Market.Balance",
            "id": 376,
            "members": [
              {
                "constant": false,
                "id": 373,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "749:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 376,
                "src": "744:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 372,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "744:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 375,
                "mutability": "mutable",
                "name": "lastTransactTimeStamp",
                "nameLocation": "770:21:3",
                "nodeType": "VariableDeclaration",
                "scope": 376,
                "src": "765:26:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 374,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "765:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Balance",
            "nameLocation": "726:7:3",
            "nodeType": "StructDefinition",
            "scope": 975,
            "src": "718:80:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 381,
            "mutability": "mutable",
            "name": "reserves",
            "nameLocation": "840:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 975,
            "src": "804:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
              "typeString": "mapping(address => struct Market.Reserve)"
            },
            "typeName": {
              "id": 380,
              "keyType": {
                "id": 377,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "812:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "804:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
                "typeString": "mapping(address => struct Market.Reserve)"
              },
              "valueType": {
                "id": 379,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 378,
                  "name": "Reserve",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 371,
                  "src": "823:7:3"
                },
                "referencedDeclaration": 371,
                "src": "823:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Reserve_$371_storage_ptr",
                  "typeString": "struct Market.Reserve"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 388,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "1023:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 975,
            "src": "967:64:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct Market.Balance))"
            },
            "typeName": {
              "id": 387,
              "keyType": {
                "id": 382,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "975:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "967:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct Market.Balance))"
              },
              "valueType": {
                "id": 386,
                "keyType": {
                  "id": 383,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "986:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$",
                  "typeString": "mapping(address => struct Market.Balance)"
                },
                "valueType": {
                  "id": 385,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 384,
                    "name": "Balance",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 376,
                    "src": "1005:7:3"
                  },
                  "referencedDeclaration": 376,
                  "src": "1005:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Balance_$376_storage_ptr",
                    "typeString": "struct Market.Balance"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 392,
            "mutability": "mutable",
            "name": "rewardBalances",
            "nameLocation": "1118:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 975,
            "src": "1085:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 391,
              "keyType": {
                "id": 389,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1093:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1085:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 390,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1104:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "4f64b2be",
            "id": 395,
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "1352:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 975,
            "src": "1335:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 393,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1335:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 394,
              "nodeType": "ArrayTypeName",
              "src": "1335:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f7c618c1",
            "id": 398,
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1409:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 975,
            "src": "1393:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_D4Atoken_$352",
              "typeString": "contract D4Atoken"
            },
            "typeName": {
              "id": 397,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 396,
                "name": "D4Atoken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 352,
                "src": "1393:8:3"
              },
              "referencedDeclaration": 352,
              "src": "1393:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_D4Atoken_$352",
                "typeString": "contract D4Atoken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 401,
            "mutability": "mutable",
            "name": "pricesUSD",
            "nameLocation": "1444:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 975,
            "src": "1426:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ChainlinkKovanUSD_$265",
              "typeString": "contract ChainlinkKovanUSD"
            },
            "typeName": {
              "id": 400,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 399,
                "name": "ChainlinkKovanUSD",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 265,
                "src": "1426:17:3"
              },
              "referencedDeclaration": 265,
              "src": "1426:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkKovanUSD_$265",
                "typeString": "contract ChainlinkKovanUSD"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4",
            "id": 405,
            "name": "TokenAdded",
            "nameLocation": "1470:10:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1489:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "1481:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:15:3"
            },
            "src": "1464:32:3"
          },
          {
            "anonymous": false,
            "eventSelector": "7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874",
            "id": 413,
            "name": "Deposited",
            "nameLocation": "1507:9:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1522:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "1517:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1538:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "1530:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 411,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1553:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "1545:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1516:42:3"
            },
            "src": "1501:58:3"
          },
          {
            "anonymous": false,
            "eventSelector": "b524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf",
            "id": 421,
            "name": "Withdrawn",
            "nameLocation": "1570:9:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1585:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "1580:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1601:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "1593:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1616:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "1608:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1579:42:3"
            },
            "src": "1564:58:3"
          },
          {
            "anonymous": false,
            "eventSelector": "a7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82",
            "id": 427,
            "name": "RewardUpdated",
            "nameLocation": "1633:13:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1652:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "1647:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 425,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1668:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "1660:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1646:27:3"
            },
            "src": "1627:47:3"
          },
          {
            "anonymous": false,
            "eventSelector": "6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212",
            "id": 433,
            "name": "Claimed",
            "nameLocation": "1685:7:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1698:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "1693:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 431,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1714:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "1706:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:27:3"
            },
            "src": "1679:41:3"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "1898:88:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 439,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "1916:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
                              "typeString": "mapping(address => struct Market.Reserve storage ref)"
                            }
                          },
                          "id": 441,
                          "indexExpression": {
                            "id": 440,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 436,
                            "src": "1925:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1916:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Reserve_$371_storage",
                            "typeString": "struct Market.Reserve storage ref"
                          }
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSupported",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 370,
                        "src": "1916:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206e6f7420737570706f72746564",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1946:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        },
                        "value": "Token not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
                          "typeString": "literal_string \"Token not supported\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1908:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:60:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:60:3"
                },
                {
                  "id": 446,
                  "nodeType": "PlaceholderStatement",
                  "src": "1978:1:3"
                }
              ]
            },
            "documentation": {
              "id": 434,
              "nodeType": "StructuredDocumentation",
              "src": "1726:123:3",
              "text": "@notice Check if the asset given to the function as been added\n @param _asset The address of the asset to check."
            },
            "id": 448,
            "name": "onlySupportedToken",
            "nameLocation": "1863:18:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "1890:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "1882:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1881:16:3"
            },
            "src": "1854:132:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "2139:88:3",
              "statements": [
                {
                  "expression": {
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 455,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "2149:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_D4Atoken_$352",
                        "typeString": "contract D4Atoken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 456,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "2163:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_D4Atoken_$352",
                        "typeString": "contract D4Atoken"
                      }
                    },
                    "src": "2149:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_D4Atoken_$352",
                      "typeString": "contract D4Atoken"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "2149:26:3"
                },
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 459,
                      "name": "pricesUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "2185:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ChainlinkKovanUSD_$265",
                        "typeString": "contract ChainlinkKovanUSD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2197:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ChainlinkKovanUSD_$265_$",
                          "typeString": "function () returns (contract ChainlinkKovanUSD)"
                        },
                        "typeName": {
                          "id": 461,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 460,
                            "name": "ChainlinkKovanUSD",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 265,
                            "src": "2201:17:3"
                          },
                          "referencedDeclaration": 265,
                          "src": "2201:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChainlinkKovanUSD_$265",
                            "typeString": "contract ChainlinkKovanUSD"
                          }
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2197:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ChainlinkKovanUSD_$265",
                        "typeString": "contract ChainlinkKovanUSD"
                      }
                    },
                    "src": "2185:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ChainlinkKovanUSD_$265",
                      "typeString": "contract ChainlinkKovanUSD"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:35:3"
                }
              ]
            },
            "documentation": {
              "id": 449,
              "nodeType": "StructuredDocumentation",
              "src": "1992:107:3",
              "text": "@notice Set the reward token and chainlink to get prices.\n @param _rewardToken The reward token."
            },
            "id": 467,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2125:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "2116:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_D4Atoken_$352",
                    "typeString": "contract D4Atoken"
                  },
                  "typeName": {
                    "id": 451,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 450,
                      "name": "D4Atoken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 352,
                      "src": "2116:8:3"
                    },
                    "referencedDeclaration": 352,
                    "src": "2116:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_D4Atoken_$352",
                      "typeString": "contract D4Atoken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2115:23:3"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2139:0:3"
            },
            "scope": 975,
            "src": "2104:123:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "2932:363:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 480,
                              "name": "reserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 381,
                              "src": "2950:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
                                "typeString": "mapping(address => struct Market.Reserve storage ref)"
                              }
                            },
                            "id": 482,
                            "indexExpression": {
                              "id": 481,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 470,
                              "src": "2959:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2950:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Reserve_$371_storage",
                              "typeString": "struct Market.Reserve storage ref"
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isSupported",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 370,
                          "src": "2950:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2982:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2950:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616c726561647920737570706f72746564",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2989:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944",
                          "typeString": "literal_string \"Token already supported\""
                        },
                        "value": "Token already supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944",
                          "typeString": "literal_string \"Token already supported\""
                        }
                      ],
                      "id": 479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2942:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2942:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "2942:73:3"
                },
                {
                  "expression": {
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 489,
                        "name": "reserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "3025:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
                          "typeString": "mapping(address => struct Market.Reserve storage ref)"
                        }
                      },
                      "id": 491,
                      "indexExpression": {
                        "id": 490,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "3034:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3025:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reserve_$371_storage",
                        "typeString": "struct Market.Reserve storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 494,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 470,
                              "src": "3079:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 493,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1674,
                            "src": "3073:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$1674_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3073:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1674",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 496,
                          "name": "_priceSymbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "3115:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 497,
                          "name": "_rewardPerHourFor1TKN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "3163:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3211:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$1674",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 492,
                        "name": "Reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "3044:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Reserve_$371_storage_ptr_$",
                          "typeString": "type(struct Market.Reserve storage pointer)"
                        }
                      },
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "token",
                        "priceSymbol",
                        "rewardPerHourFor1TKN",
                        "isSupported"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3044:182:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reserve_$371_memory_ptr",
                        "typeString": "struct Market.Reserve memory"
                      }
                    },
                    "src": "3025:201:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Reserve_$371_storage",
                      "typeString": "struct Market.Reserve storage ref"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:201:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "3248:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 502,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "3236:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3236:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3236:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "3236:19:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 509,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "3281:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 508,
                      "name": "TokenAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "3270:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "EmitStatement",
                  "src": "3265:23:3"
                }
              ]
            },
            "documentation": {
              "id": 468,
              "nodeType": "StructuredDocumentation",
              "src": "2234:584:3",
              "text": "@notice Register a token to be supported by the market.\n @dev  The owner associate the price of the token by using the corresponding map of ChainlinkKovanUSD.\n @param _asset The address of the token to be added.\n @param _rewardPerHourFor1TKN The number of reward tokens in wei units to be minted for 1 ether units of the given asset during 1 hour.\n @param _priceSymbol The symbol of the token to be looked for in chainlink when we want the price of the asset. Can be different of the asset symbol. (ex: D4A => DAI, D4A will have the same price as DAI)."
            },
            "functionSelector": "1d0b347a",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 477,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 476,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1007,
                  "src": "2922:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2922:9:3"
              }
            ],
            "name": "addToken",
            "nameLocation": "2832:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "2849:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "2841:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2841:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "_rewardPerHourFor1TKN",
                  "nameLocation": "2862:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "2857:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2857:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "_priceSymbol",
                  "nameLocation": "2899:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "2885:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2885:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2840:72:3"
            },
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2932:0:3"
            },
            "scope": 975,
            "src": "2823:472:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 532,
              "nodeType": "Block",
              "src": "3664:78:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 526,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "3706:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
                              "typeString": "mapping(address => struct Market.Reserve storage ref)"
                            }
                          },
                          "id": 528,
                          "indexExpression": {
                            "id": 527,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "3715:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3706:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Reserve_$371_storage",
                            "typeString": "struct Market.Reserve storage ref"
                          }
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "priceSymbol",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 366,
                        "src": "3706:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 524,
                        "name": "pricesUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "3681:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChainlinkKovanUSD_$265",
                          "typeString": "contract ChainlinkKovanUSD"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLatestPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 264,
                      "src": "3681:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_int256_$",
                        "typeString": "function (string memory) view external returns (int256)"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3681:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 523,
                  "id": 531,
                  "nodeType": "Return",
                  "src": "3674:61:3"
                }
              ]
            },
            "documentation": {
              "id": 514,
              "nodeType": "StructuredDocumentation",
              "src": "3301:270:3",
              "text": "@notice Get the price of the asset in USD.\n @dev Uses Chainlink datafeeds on kovan. The result must be divided by 8 to get the correct dollar decimal.\n @param _asset The address of the token for wich we want the price.\n @return The price in USD."
            },
            "functionSelector": "b95ed06f",
            "id": 533,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 519,
                    "name": "_asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 516,
                    "src": "3642:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 520,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 518,
                  "name": "onlySupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "3623:18:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3623:26:3"
              }
            ],
            "name": "priceOf",
            "nameLocation": "3585:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3601:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "3593:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3593:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3592:16:3"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "3659:3:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "3659:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3658:5:3"
            },
            "scope": 975,
            "src": "3576:166:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "4094:312:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 549,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4140:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4140:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 553,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4160:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$975",
                              "typeString": "contract Market"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Market_$975",
                              "typeString": "contract Market"
                            }
                          ],
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4152:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 551,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4152:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4152:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 555,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "4167:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 544,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "4104:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
                              "typeString": "mapping(address => struct Market.Reserve storage ref)"
                            }
                          },
                          "id": 546,
                          "indexExpression": {
                            "id": 545,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "4113:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4104:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Reserve_$371_storage",
                            "typeString": "struct Market.Reserve storage ref"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 364,
                        "src": "4104:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1674",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1288,
                      "src": "4104:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4104:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "4104:71:3"
                },
                {
                  "expression": {
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 558,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 388,
                            "src": "4185:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Market.Balance storage ref))"
                            }
                          },
                          "id": 562,
                          "indexExpression": {
                            "expression": {
                              "id": 559,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4194:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4194:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4185:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$",
                            "typeString": "mapping(address => struct Market.Balance storage ref)"
                          }
                        },
                        "id": 563,
                        "indexExpression": {
                          "id": 561,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "4206:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4185:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Balance_$376_storage",
                          "typeString": "struct Market.Balance storage ref"
                        }
                      },
                      "id": 564,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastTransactTimeStamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 375,
                      "src": "4185:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 565,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4238:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4238:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4185:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "4185:68:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 570,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "4283:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 569,
                      "name": "updateRewardBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 905,
                      "src": "4263:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:27:3"
                },
                {
                  "expression": {
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 573,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 388,
                            "src": "4300:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Market.Balance storage ref))"
                            }
                          },
                          "id": 577,
                          "indexExpression": {
                            "expression": {
                              "id": 574,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4309:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4309:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4300:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$",
                            "typeString": "mapping(address => struct Market.Balance storage ref)"
                          }
                        },
                        "id": 578,
                        "indexExpression": {
                          "id": 576,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "4321:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4300:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Balance_$376_storage",
                          "typeString": "struct Market.Balance storage ref"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 373,
                      "src": "4300:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 580,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "4339:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4300:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "4300:46:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 584,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "4371:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 585,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "4380:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 586,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4388:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4388:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 583,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "4361:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4361:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "EmitStatement",
                  "src": "4356:43:3"
                }
              ]
            },
            "documentation": {
              "id": 534,
              "nodeType": "StructuredDocumentation",
              "src": "3748:258:3",
              "text": "@notice Allows a user to deposit Xwei tokens.\n @dev We update all of our informations once the transaction has succeded.\n @param _amount The amount of asset in wei to be deposited.\n @param _asset The address of the token to be stack."
            },
            "functionSelector": "6e553f65",
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 541,
                    "name": "_asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 538,
                    "src": "4086:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 542,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 540,
                  "name": "onlySupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "4067:18:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4067:26:3"
              }
            ],
            "name": "deposit",
            "nameLocation": "4020:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4033:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "4028:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4028:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "4050:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "4042:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4042:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4027:30:3"
            },
            "returnParameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4094:0:3"
            },
            "scope": 975,
            "src": "4011:395:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "4764:502:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 604,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "4793:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 603,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "4782:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4782:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 606,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "4804:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4782:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5769746864726177696e6720746f6f206d756368",
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4813:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d",
                          "typeString": "literal_string \"Withdrawing too much\""
                        },
                        "value": "Withdrawing too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_521df65bfa8c41d35d93b3383bf6983913192ffb64cc3a7913a20af2d24fe07d",
                          "typeString": "literal_string \"Withdrawing too much\""
                        }
                      ],
                      "id": 602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4774:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4774:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "4774:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 612,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "4866:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 611,
                      "name": "updateRewardBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 905,
                      "src": "4846:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4846:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "4846:27:3"
                },
                {
                  "expression": {
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 615,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 388,
                            "src": "4883:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Market.Balance storage ref))"
                            }
                          },
                          "id": 619,
                          "indexExpression": {
                            "expression": {
                              "id": 616,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4892:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4892:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4883:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$",
                            "typeString": "mapping(address => struct Market.Balance storage ref)"
                          }
                        },
                        "id": 620,
                        "indexExpression": {
                          "id": 618,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "4904:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4883:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Balance_$376_storage",
                          "typeString": "struct Market.Balance storage ref"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 373,
                      "src": "4883:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 622,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "4922:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4883:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "4883:46:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 626,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "4953:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 625,
                        "name": "getBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "4942:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4942:18:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4963:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4942:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 652,
                    "nodeType": "Block",
                    "src": "5065:79:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 642,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "5079:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct Market.Balance storage ref))"
                                  }
                                },
                                "id": 646,
                                "indexExpression": {
                                  "expression": {
                                    "id": 643,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "5088:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5088:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5079:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$",
                                  "typeString": "mapping(address => struct Market.Balance storage ref)"
                                }
                              },
                              "id": 647,
                              "indexExpression": {
                                "id": 645,
                                "name": "_asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 596,
                                "src": "5100:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5079:28:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$376_storage",
                                "typeString": "struct Market.Balance storage ref"
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastTransactTimeStamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 375,
                            "src": "5079:50:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5132:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5079:54:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 651,
                        "nodeType": "ExpressionStatement",
                        "src": "5079:54:3"
                      }
                    ]
                  },
                  "id": 653,
                  "nodeType": "IfStatement",
                  "src": "4939:205:3",
                  "trueBody": {
                    "id": 641,
                    "nodeType": "Block",
                    "src": "4966:93:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 630,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "4980:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct Market.Balance storage ref))"
                                  }
                                },
                                "id": 634,
                                "indexExpression": {
                                  "expression": {
                                    "id": 631,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4989:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4989:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4980:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$",
                                  "typeString": "mapping(address => struct Market.Balance storage ref)"
                                }
                              },
                              "id": 635,
                              "indexExpression": {
                                "id": 633,
                                "name": "_asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 596,
                                "src": "5001:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4980:28:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balance_$376_storage",
                                "typeString": "struct Market.Balance storage ref"
                              }
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastTransactTimeStamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 375,
                            "src": "4980:50:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 637,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "5033:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5033:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4980:68:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 640,
                        "nodeType": "ExpressionStatement",
                        "src": "4980:68:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 659,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5185:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5185:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 661,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 594,
                        "src": "5197:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 654,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "5153:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
                              "typeString": "mapping(address => struct Market.Reserve storage ref)"
                            }
                          },
                          "id": 656,
                          "indexExpression": {
                            "id": 655,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "5162:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5153:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Reserve_$371_storage",
                            "typeString": "struct Market.Reserve storage ref"
                          }
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 364,
                        "src": "5153:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1674",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1212,
                      "src": "5153:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5153:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "5153:52:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 665,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 594,
                        "src": "5230:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 666,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "5240:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 667,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5248:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5248:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 664,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "5220:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5220:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 670,
                  "nodeType": "EmitStatement",
                  "src": "5215:44:3"
                }
              ]
            },
            "documentation": {
              "id": 592,
              "nodeType": "StructuredDocumentation",
              "src": "4412:263:3",
              "text": "@notice Allows a user to withdraw Xwei tokens.\n @dev We update all of our informations once the transaction has succeded.\n @param _amount The amount of asset in wei to be withdrawn.\n @param _asset The address of the token to be withdrawn."
            },
            "functionSelector": "00f714ce",
            "id": 672,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 599,
                    "name": "_asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 596,
                    "src": "4756:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 600,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 598,
                  "name": "onlySupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "4737:18:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4737:26:3"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4689:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4703:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 672,
                  "src": "4698:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4698:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "4720:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 672,
                  "src": "4712:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4712:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4697:30:3"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4764:0:3"
            },
            "scope": 975,
            "src": "4680:586:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 761,
              "nodeType": "Block",
              "src": "5466:599:3",
              "statements": [
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "nameLocation": "5484:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "5476:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 676,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5476:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 678,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5476:17:3"
                },
                {
                  "assignments": [
                    680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 680,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "5508:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "5503:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 679,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5503:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 681,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5503:11:3"
                },
                {
                  "body": {
                    "id": 721,
                    "nodeType": "Block",
                    "src": "5563:247:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 693,
                            "name": "tokenAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "5577:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 694,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 395,
                              "src": "5589:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 696,
                            "indexExpression": {
                              "id": 695,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "5596:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5589:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5577:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 698,
                        "nodeType": "ExpressionStatement",
                        "src": "5577:21:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 700,
                                "name": "tokenAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 677,
                                "src": "5631:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 699,
                              "name": "getLastTransact",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "5615:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5615:26:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5644:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5615:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 720,
                        "nodeType": "IfStatement",
                        "src": "5612:188:3",
                        "trueBody": {
                          "id": 719,
                          "nodeType": "Block",
                          "src": "5648:152:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 705,
                                    "name": "tokenAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 677,
                                    "src": "5686:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 704,
                                  "name": "updateRewardBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 905,
                                  "src": "5666:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5666:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 707,
                              "nodeType": "ExpressionStatement",
                              "src": "5666:30:3"
                            },
                            {
                              "expression": {
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 708,
                                        "name": "balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 388,
                                        "src": "5714:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
                                          "typeString": "mapping(address => mapping(address => struct Market.Balance storage ref))"
                                        }
                                      },
                                      "id": 712,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 709,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "5723:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 710,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "5723:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5714:20:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$",
                                        "typeString": "mapping(address => struct Market.Balance storage ref)"
                                      }
                                    },
                                    "id": 713,
                                    "indexExpression": {
                                      "id": 711,
                                      "name": "tokenAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 677,
                                      "src": "5735:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5714:31:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balance_$376_storage",
                                      "typeString": "struct Market.Balance storage ref"
                                    }
                                  },
                                  "id": 714,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "lastTransactTimeStamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 375,
                                  "src": "5714:53:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 715,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "5770:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5770:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5714:71:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 718,
                              "nodeType": "ExpressionStatement",
                              "src": "5714:71:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 686,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "5540:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 687,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "5544:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5544:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5540:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 722,
                  "initializationExpression": {
                    "assignments": [
                      683
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5533:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "5528:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5528:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 685,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5537:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5528:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5559:3:3",
                      "subExpression": {
                        "id": 690,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "5561:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 692,
                    "nodeType": "ExpressionStatement",
                    "src": "5559:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "5524:286:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 724,
                            "name": "rewardBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 392,
                            "src": "5827:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 727,
                          "indexExpression": {
                            "expression": {
                              "id": 725,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5842:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5842:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5827:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5856:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5827:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207265776172647320746f206265206d696e746564",
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5859:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a",
                          "typeString": "literal_string \"No rewards to be minted\""
                        },
                        "value": "No rewards to be minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da77e7611516f98899a52a9a7587dfa3ae85537fb19a1a1b5ad1bbfd76920c2a",
                          "typeString": "literal_string \"No rewards to be minted\""
                        }
                      ],
                      "id": 723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5819:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5819:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "5819:66:3"
                },
                {
                  "expression": {
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 733,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "5895:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 734,
                        "name": "rewardBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "5904:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 737,
                      "indexExpression": {
                        "expression": {
                          "id": 735,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5919:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5919:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5904:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5895:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "5895:35:3"
                },
                {
                  "expression": {
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 740,
                        "name": "rewardBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "5940:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 743,
                      "indexExpression": {
                        "expression": {
                          "id": 741,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5955:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5955:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5940:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5969:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5940:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "5940:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 750,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5997:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5997:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 752,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "6009:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 747,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "5980:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_D4Atoken_$352",
                          "typeString": "contract D4Atoken"
                        }
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 308,
                      "src": "5980:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5980:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "5980:36:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 756,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "6039:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 757,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6047:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6047:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 755,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "6031:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6031:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "EmitStatement",
                  "src": "6026:32:3"
                }
              ]
            },
            "documentation": {
              "id": 673,
              "nodeType": "StructuredDocumentation",
              "src": "5272:163:3",
              "text": "@notice Allows a user to retrieve his accumulated reward tokens\n @dev This function must be strongly secure as we mint the calculated amount at the end."
            },
            "functionSelector": "4e71d92d",
            "id": 762,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "5449:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5454:2:3"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5466:0:3"
            },
            "scope": 975,
            "src": "5440:625:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "6406:344:3",
              "statements": [
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "nameLocation": "6424:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 812,
                      "src": "6416:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6416:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 770,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6416:17:3"
                },
                {
                  "assignments": [
                    772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 772,
                      "mutability": "mutable",
                      "name": "totalRewards",
                      "nameLocation": "6448:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 812,
                      "src": "6443:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 771,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6443:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 777,
                  "initialValue": {
                    "baseExpression": {
                      "id": 773,
                      "name": "rewardBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "6463:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 776,
                    "indexExpression": {
                      "expression": {
                        "id": 774,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6478:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6478:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6463:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6443:46:3"
                },
                {
                  "body": {
                    "id": 808,
                    "nodeType": "Block",
                    "src": "6538:177:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 789,
                            "name": "tokenAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "6552:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 790,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 395,
                              "src": "6564:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 792,
                            "indexExpression": {
                              "id": 791,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "6571:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6564:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6552:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 794,
                        "nodeType": "ExpressionStatement",
                        "src": "6552:21:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 796,
                                "name": "tokenAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 769,
                                "src": "6607:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 795,
                              "name": "getLastTransact",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "6591:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6591:26:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6620:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6591:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 807,
                        "nodeType": "IfStatement",
                        "src": "6587:118:3",
                        "trueBody": {
                          "id": 806,
                          "nodeType": "Block",
                          "src": "6624:81:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 800,
                                  "name": "totalRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 772,
                                  "src": "6642:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 802,
                                      "name": "tokenAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 769,
                                      "src": "6680:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 801,
                                    "name": "calculateRewardEarned",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 877,
                                    "src": "6658:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view returns (uint256)"
                                    }
                                  },
                                  "id": 803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6658:32:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6642:48:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 805,
                              "nodeType": "ExpressionStatement",
                              "src": "6642:48:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 782,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "6515:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 783,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "6519:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6519:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6515:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 809,
                  "initializationExpression": {
                    "assignments": [
                      779
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6508:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 809,
                        "src": "6503:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6503:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 781,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6512:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6503:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6534:3:3",
                      "subExpression": {
                        "id": 786,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "6536:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 788,
                    "nodeType": "ExpressionStatement",
                    "src": "6534:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "6499:216:3"
                },
                {
                  "expression": {
                    "id": 810,
                    "name": "totalRewards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 772,
                    "src": "6731:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 767,
                  "id": 811,
                  "nodeType": "Return",
                  "src": "6724:19:3"
                }
              ]
            },
            "documentation": {
              "id": 763,
              "nodeType": "StructuredDocumentation",
              "src": "6071:264:3",
              "text": "@notice Calculate the global reward balance of a user with the rewards accumulated for ALL tokens.\n @dev This function allow to check the global rewards without modifying state variables. Developper can then call this function rapidely in the front-end."
            },
            "functionSelector": "f34f04a6",
            "id": 813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTotalRewardEarned",
            "nameLocation": "6349:26:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6375:2:3"
            },
            "returnParameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "6400:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6400:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6399:6:3"
            },
            "scope": 975,
            "src": "6340:410:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 876,
              "nodeType": "Block",
              "src": "7155:606:3",
              "statements": [
                {
                  "assignments": [
                    825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 825,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nameLocation": "7170:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 876,
                      "src": "7165:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 824,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7165:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 829,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 827,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "7198:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 826,
                      "name": "getBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "7187:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7187:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7165:40:3"
                },
                {
                  "assignments": [
                    831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 831,
                      "mutability": "mutable",
                      "name": "lastTransact",
                      "nameLocation": "7220:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 876,
                      "src": "7215:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 830,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7215:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 835,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 833,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "7251:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 832,
                      "name": "getLastTransact",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 945,
                      "src": "7235:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7235:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7215:43:3"
                },
                {
                  "assignments": [
                    837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 837,
                      "mutability": "mutable",
                      "name": "rewardPerHourFor1TKN",
                      "nameLocation": "7273:20:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 876,
                      "src": "7268:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 836,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7268:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 842,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 838,
                        "name": "reserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "7296:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
                          "typeString": "mapping(address => struct Market.Reserve storage ref)"
                        }
                      },
                      "id": 840,
                      "indexExpression": {
                        "id": 839,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "7305:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7296:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reserve_$371_storage",
                        "typeString": "struct Market.Reserve storage ref"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rewardPerHourFor1TKN",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 368,
                    "src": "7296:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7268:65:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 843,
                        "name": "lastTransact",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "7346:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7361:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7346:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 846,
                        "name": "currentBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "7366:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7383:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7366:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7346:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 874,
                    "nodeType": "Block",
                    "src": "7722:33:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7743:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 823,
                        "id": 873,
                        "nodeType": "Return",
                        "src": "7736:8:3"
                      }
                    ]
                  },
                  "id": 875,
                  "nodeType": "IfStatement",
                  "src": "7343:412:3",
                  "trueBody": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "7386:330:3",
                    "statements": [
                      {
                        "assignments": [
                          851
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 851,
                            "mutability": "mutable",
                            "name": "rewardCurrentBalance",
                            "nameLocation": "7494:20:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 871,
                            "src": "7489:25:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 850,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7489:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 859,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 852,
                                  "name": "currentBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 825,
                                  "src": "7518:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 853,
                                  "name": "rewardPerHourFor1TKN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 837,
                                  "src": "7535:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7518:37:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 855,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7517:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "hexValue": "31",
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7558:7:3",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              }
                            ],
                            "id": 857,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7557:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "7517:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7489:77:3"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 863,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 860,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "7643:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 861,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "7643:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 862,
                                        "name": "lastTransact",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 831,
                                        "src": "7661:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7643:30:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 864,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7642:32:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 865,
                                  "name": "rewardCurrentBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 851,
                                  "src": "7677:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7642:55:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 867,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7641:57:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "33363030",
                            "id": 868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7701:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3600_by_1",
                              "typeString": "int_const 3600"
                            },
                            "value": "3600"
                          },
                          "src": "7641:64:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 823,
                        "id": 870,
                        "nodeType": "Return",
                        "src": "7634:71:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 814,
              "nodeType": "StructuredDocumentation",
              "src": "6756:293:3",
              "text": "@notice Calculate the rewards earned for a specific token.\n @dev Keeping track of the last transaction (deposit, withdraw, claim), allow us to calculate rewards earned between last transaction and now.\n @param _asset The address of the token we want to calculate the rewards."
            },
            "id": 877,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 819,
                    "name": "_asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 816,
                    "src": "7133:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 820,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 818,
                  "name": "onlySupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "7114:18:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7114:26:3"
              }
            ],
            "name": "calculateRewardEarned",
            "nameLocation": "7063:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "7093:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "7085:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7085:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7084:16:3"
            },
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "7149:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7149:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7148:6:3"
            },
            "scope": 975,
            "src": "7054:707:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "8134:144:3",
              "statements": [
                {
                  "expression": {
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 886,
                        "name": "rewardBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "8144:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 889,
                      "indexExpression": {
                        "expression": {
                          "id": 887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8159:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8159:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8144:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 891,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 880,
                          "src": "8196:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 890,
                        "name": "calculateRewardEarned",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "8174:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8174:29:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8144:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "8144:59:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 896,
                          "name": "rewardBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "8232:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 899,
                        "indexExpression": {
                          "expression": {
                            "id": 897,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8247:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8247:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8232:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 900,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8260:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8260:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 895,
                      "name": "RewardUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "8218:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8218:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "EmitStatement",
                  "src": "8213:58:3"
                }
              ]
            },
            "documentation": {
              "id": 878,
              "nodeType": "StructuredDocumentation",
              "src": "7767:282:3",
              "text": "@notice Update the global reward balance of a user with the rewards accumulated for one token.\n @dev Keeping track of the last transaction (deposit, withdraw, claim), allow us to update the global reward balance each time we make a transaction (deposit, withdraw, claim)."
            },
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 883,
                    "name": "_asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 880,
                    "src": "8126:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 884,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 882,
                  "name": "onlySupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "8107:18:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8107:26:3"
              }
            ],
            "name": "updateRewardBalance",
            "nameLocation": "8063:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "8091:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "8083:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8083:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8082:16:3"
            },
            "returnParameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8134:0:3"
            },
            "scope": 975,
            "src": "8054:224:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 924,
              "nodeType": "Block",
              "src": "8551:59:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 916,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 388,
                          "src": "8568:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Market.Balance storage ref))"
                          }
                        },
                        "id": 919,
                        "indexExpression": {
                          "expression": {
                            "id": 917,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8577:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8577:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8568:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$",
                          "typeString": "mapping(address => struct Market.Balance storage ref)"
                        }
                      },
                      "id": 921,
                      "indexExpression": {
                        "id": 920,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "8589:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8568:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Balance_$376_storage",
                        "typeString": "struct Market.Balance storage ref"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 373,
                    "src": "8568:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 915,
                  "id": 923,
                  "nodeType": "Return",
                  "src": "8561:42:3"
                }
              ]
            },
            "documentation": {
              "id": 906,
              "nodeType": "StructuredDocumentation",
              "src": "8284:173:3",
              "text": "@notice Retrieve the amount of token stacked.\n @dev Public for unit tests.\n @param _asset The address of the token we want to calculate the amount stacked."
            },
            "functionSelector": "f8b2cb4f",
            "id": 925,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 911,
                    "name": "_asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 908,
                    "src": "8529:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 912,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 910,
                  "name": "onlySupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "8510:18:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8510:26:3"
              }
            ],
            "name": "getBalance",
            "nameLocation": "8471:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "8490:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "8482:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8482:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8481:16:3"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "8545:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8545:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8544:6:3"
            },
            "scope": 975,
            "src": "8462:148:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 944,
              "nodeType": "Block",
              "src": "8888:74:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 936,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 388,
                          "src": "8905:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct Market.Balance storage ref))"
                          }
                        },
                        "id": 939,
                        "indexExpression": {
                          "expression": {
                            "id": 937,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8914:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8914:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8905:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$376_storage_$",
                          "typeString": "mapping(address => struct Market.Balance storage ref)"
                        }
                      },
                      "id": 941,
                      "indexExpression": {
                        "id": 940,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "8926:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8905:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Balance_$376_storage",
                        "typeString": "struct Market.Balance storage ref"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "lastTransactTimeStamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 375,
                    "src": "8905:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 935,
                  "id": 943,
                  "nodeType": "Return",
                  "src": "8898:57:3"
                }
              ]
            },
            "documentation": {
              "id": 926,
              "nodeType": "StructuredDocumentation",
              "src": "8616:173:3",
              "text": "@notice Retrieve the time of the last traansaction.\n @dev Public for unit tests.\n @param _asset The address of the token we want the last transaction time."
            },
            "functionSelector": "93e4f7b2",
            "id": 945,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 931,
                    "name": "_asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 928,
                    "src": "8866:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 932,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 930,
                  "name": "onlySupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "8847:18:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8847:26:3"
              }
            ],
            "name": "getLastTransact",
            "nameLocation": "8803:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "8827:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "8819:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8819:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8818:16:3"
            },
            "returnParameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "8882:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8882:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8881:6:3"
            },
            "scope": 975,
            "src": "8794:168:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "9218:40:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 957,
                      "name": "reserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "9235:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Reserve_$371_storage_$",
                        "typeString": "mapping(address => struct Market.Reserve storage ref)"
                      }
                    },
                    "id": 959,
                    "indexExpression": {
                      "id": 958,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 948,
                      "src": "9244:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9235:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Reserve_$371_storage",
                      "typeString": "struct Market.Reserve storage ref"
                    }
                  },
                  "functionReturnParameters": 956,
                  "id": 960,
                  "nodeType": "Return",
                  "src": "9228:23:3"
                }
              ]
            },
            "documentation": {
              "id": 946,
              "nodeType": "StructuredDocumentation",
              "src": "8968:146:3",
              "text": "@notice Retrieve the reserve of a token.\n @dev Made for unit tests.\n @param _asset The address of the token we want the reserve."
            },
            "functionSelector": "c9a396e9",
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 951,
                    "name": "_asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 948,
                    "src": "9186:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 952,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 950,
                  "name": "onlySupportedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "9167:18:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "9167:26:3"
              }
            ],
            "name": "getReserve",
            "nameLocation": "9128:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "9147:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "9139:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9139:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9138:16:3"
            },
            "returnParameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 955,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "9202:14:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Reserve_$371_memory_ptr",
                    "typeString": "struct Market.Reserve"
                  },
                  "typeName": {
                    "id": 954,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 953,
                      "name": "Reserve",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 371,
                      "src": "9202:7:3"
                    },
                    "referencedDeclaration": 371,
                    "src": "9202:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Reserve_$371_storage_ptr",
                      "typeString": "struct Market.Reserve"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9201:16:3"
            },
            "scope": 975,
            "src": "9119:139:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 973,
              "nodeType": "Block",
              "src": "9456:50:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 968,
                      "name": "rewardBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "9473:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 971,
                    "indexExpression": {
                      "expression": {
                        "id": 969,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9488:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9488:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9473:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 967,
                  "id": 972,
                  "nodeType": "Return",
                  "src": "9466:33:3"
                }
              ]
            },
            "documentation": {
              "id": 963,
              "nodeType": "StructuredDocumentation",
              "src": "9264:133:3",
              "text": "@notice Retrieve the global reward balance.\n @dev Made for unit tests.\n @return The amount of reward tokens earned."
            },
            "functionSelector": "5e42b455",
            "id": 974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardBalance",
            "nameLocation": "9411:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9427:2:3"
            },
            "returnParameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "9450:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9450:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9449:6:3"
            },
            "scope": 975,
            "src": "9402:104:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 976,
        "src": "343:9165:3",
        "usedErrors": []
      }
    ],
    "src": "32:9477:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "1659472530368": {
      "events": {},
      "links": {},
      "address": "0xD720F05d114d6d78cc299BfEd6babdBF65158351",
      "transactionHash": "0x5b775859cf2bdf2398a1a491de3bd1a5f78e56b5b2a9bac2fcc581b1db9021ce"
    },
    "1659529879131": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xee67DB9A618aBAF67203d03Fd59D6EEA6FDEE81d",
      "transactionHash": "0x0db8cb7adcc44490d2a793c38d7f5e1a12a04973ff671c86f60918e1c5a02c14"
    },
    "1659880303105": {
      "events": {},
      "links": {},
      "address": "0x69E1d718C3Fc687DF154D798cC6A4ae3D34Bf769",
      "transactionHash": "0x407b4c398625f379548cb1a2f2ff7d0aab2ae716a40075a202f5cdd5cab14344"
    },
    "1659885543466": {
      "events": {},
      "links": {},
      "address": "0xe8f77F8EBe55bb374fE5D56c54DD7111E6ad5b65",
      "transactionHash": "0x39a662c5215c3fd402faee16b3c947ca358a471b0c0b0c3293c31467237405e0"
    },
    "1659886757647": {
      "events": {},
      "links": {},
      "address": "0x2b0A966fE72E8E678C4DF73dB7226d276D08b3b9",
      "transactionHash": "0x65a8f551176046ce6aaa6de202335987c1798a362a7f43127ccb2cf4bf118d9f"
    },
    "1659887252250": {
      "events": {},
      "links": {},
      "address": "0xB35D0fE272ef471b0D58F4bE10d8cbC3d5424Fe3",
      "transactionHash": "0xa01a3b3b76fc1c8a239ebc0a23db16d100356cf6a7a4673e7ee93b8d019bf2e9"
    },
    "1659887630709": {
      "events": {},
      "links": {},
      "address": "0x3dB6223d6C1243f078280d531265C07050308B00",
      "transactionHash": "0x21823e06cc456760f90caa2e5e43b76a2a21b69753d0960926881b804353ea60"
    },
    "1659888263141": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7E16Fa37723aC82Ce1dAEb0406FbAf2b6796758E",
      "transactionHash": "0xece0b1d0ff89e25227c8d2179e4a013b9a556b67514d94549bff8b4a1e36c957"
    },
    "1659904612036": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xe548e727Dd128Bce3bf55aF586e819aB50C3333c",
      "transactionHash": "0x0029c5ed2eacbfa205f2421607df292f3545bec302f407cfc7e26b1b5dc85802"
    },
    "1659905195501": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9578be9D40BDd935b58Dcb23033baD902f43c7EF",
      "transactionHash": "0x6f6d8778971fec378681936d633008570d7fa0d096c2ec0fe53fe6a690f3d61d"
    },
    "1659905385480": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x85A52AdbE999b4e91Fb1127D23Ff44eb8cfd113a",
      "transactionHash": "0xa5e1a4ba041f4806371ecbd946c4bbf38bd3d80c028d3721b2e333e0b65552ad"
    },
    "1659905540180": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xf1a5647C4284d3cEF16Ae5e56047b2FDCab41827",
      "transactionHash": "0xd99b24f051e8f215be8024e7b13521bd896e52e93054b5167d5343aa0af673f9"
    },
    "1659905625568": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xaAc282fd1cCA14c6bF88a25b409A98Bcb1fd9C8C",
      "transactionHash": "0x467f33d94dbcc27cdef5beb25f227f2a45f2023bae2a94095757b6f080d64120"
    },
    "1659905894785": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE4F792a5df7244cDe5ece9a070c6223064f09955",
      "transactionHash": "0x8307643bf6a9066485c6c2cc2777fd14b03a1cbd6aa9c95d4f3638db17ed4537"
    },
    "1659911799128": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xfe46d2B4d2468eE8EC4C5c370f23a49a005edeeA",
      "transactionHash": "0x58a1c52a7ad5271857b8b32d87e40592edda9b24100f64e3567e477e18c258ae"
    },
    "1659912744077": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x85d51199960345d0098d8c8F0338C35436e91E23",
      "transactionHash": "0xcb8a061a7969ec79caae66c09c2e08943d0357c38482247f6110d89e1265ed88"
    },
    "1659913924843": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x765d49acb5649Df965C5EfEbEc00920DbcdDeF5e",
      "transactionHash": "0xc42ec8d76a246d7ffce80b17c9994d5a52408a5909f11166241bdde572ae093b"
    },
    "1659921102370": {
      "events": {
        "0x6aa3eac93d079e5e100b1029be716caa33586c96aa4baac390669fb5c2a21212": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x7896c404bfb9173f4c61824c5e10e743eb885c3fe1c1727ed55ac3a51a350874": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Deposited",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xa7db2208fbbce7742b3103d7205e99d91f1c9a8243df48faf7651d7bf88e7b82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RewardUpdated",
          "type": "event"
        },
        "0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "name": "TokenAdded",
          "type": "event"
        },
        "0xb524bace85e4ce0f8da306e32f39263c5724780ca00b7551c051c8e3dc36adaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x920cfeA1205a6ab2204a2e4bef9878Fb61D9BA8a",
      "transactionHash": "0x6871f0697fad0e118526d1cc81ca92910d3c160e8605aa506fe43e345ab40769"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-08-08T01:12:10.795Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addToken(address,uint256,string)": {
        "details": "The owner associate the price of the token by using the corresponding map of ChainlinkKovanUSD.",
        "params": {
          "_asset": "The address of the token to be added.",
          "_priceSymbol": "The symbol of the token to be looked for in chainlink when we want the price of the asset. Can be different of the asset symbol. (ex: D4A => DAI, D4A will have the same price as DAI).",
          "_rewardPerHourFor1TKN": "The number of reward tokens in wei units to be minted for 1 ether units of the given asset during 1 hour."
        }
      },
      "calculateTotalRewardEarned()": {
        "details": "This function allow to check the global rewards without modifying state variables. Developper can then call this function rapidely in the front-end."
      },
      "claim()": {
        "details": "This function must be strongly secure as we mint the calculated amount at the end."
      },
      "constructor": {
        "params": {
          "_rewardToken": "The reward token."
        }
      },
      "deposit(uint256,address)": {
        "details": "We update all of our informations once the transaction has succeded.",
        "params": {
          "_amount": "The amount of asset in wei to be deposited.",
          "_asset": "The address of the token to be stack."
        }
      },
      "getBalance(address)": {
        "details": "Public for unit tests.",
        "params": {
          "_asset": "The address of the token we want to calculate the amount stacked."
        }
      },
      "getLastTransact(address)": {
        "details": "Public for unit tests.",
        "params": {
          "_asset": "The address of the token we want the last transaction time."
        }
      },
      "getReserve(address)": {
        "details": "Made for unit tests.",
        "params": {
          "_asset": "The address of the token we want the reserve."
        }
      },
      "getRewardBalance()": {
        "details": "Made for unit tests.",
        "returns": {
          "_0": "The amount of reward tokens earned."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "priceOf(address)": {
        "details": "Uses Chainlink datafeeds on kovan. The result must be divided by 8 to get the correct dollar decimal.",
        "params": {
          "_asset": "The address of the token for wich we want the price."
        },
        "returns": {
          "_0": "The price in USD."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256,address)": {
        "details": "We update all of our informations once the transaction has succeded.",
        "params": {
          "_amount": "The amount of asset in wei to be withdrawn.",
          "_asset": "The address of the token to be withdrawn."
        }
      }
    },
    "title": "Stacking project",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addToken(address,uint256,string)": {
        "notice": "Register a token to be supported by the market."
      },
      "calculateTotalRewardEarned()": {
        "notice": "Calculate the global reward balance of a user with the rewards accumulated for ALL tokens."
      },
      "claim()": {
        "notice": "Allows a user to retrieve his accumulated reward tokens"
      },
      "constructor": {
        "notice": "Set the reward token and chainlink to get prices."
      },
      "deposit(uint256,address)": {
        "notice": "Allows a user to deposit Xwei tokens."
      },
      "getBalance(address)": {
        "notice": "Retrieve the amount of token stacked."
      },
      "getLastTransact(address)": {
        "notice": "Retrieve the time of the last traansaction."
      },
      "getReserve(address)": {
        "notice": "Retrieve the reserve of a token."
      },
      "getRewardBalance()": {
        "notice": "Retrieve the global reward balance."
      },
      "priceOf(address)": {
        "notice": "Get the price of the asset in USD."
      },
      "withdraw(uint256,address)": {
        "notice": "Allows a user to withdraw Xwei tokens."
      }
    },
    "notice": "Staking with deposit, withdrawal and rewards",
    "version": 1
  }
}